<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="upgradedb" xreflabel="Oppgradere databasen">
  <?dbhtml filename="upgradedb.html"?>


  <title>Viktige Merknader om Oppgradering av Databaseserverprogramvare</title>

    <note><para>Denne delen handler om å installere databaseprogramvare på nytt
    når en eksisterende database er i bruk. Det gjelder ikke for
    innledende installasjoner eller hvis det ikke finnes en eksisterende database for
    pakken som oppdateres, men brukere bør lese gjennom den
    for å bli bevisst på problemer som kan oppstå i fremtiden.</para></note>

    <para>La oss starte dette kapittelet med et dramatisk skjermbilde av en feil som
    virkelig skjedde. Denne feilen vil ikke oppstå hvis du installerer databaseprogramvaren
    for første gang:</para>

<screen>$ sudo systemctl status postgresql
-- postgresql.service - PostgreSQL database server
     Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)
     Active: failed (Result: exit-code) since Tue 2021-10-26 17:11:53 CDT; 2min 49s ago
    Process: 17336 ExecStart=/usr/bin/pg_ctl -s -D ${PGROOT}/data start -w -t 120 (code=exited, status=1/FAILURE)
        CPU: 7ms

Oct 26 17:11:53 SVRNAME systemd[1]: Starting PostgreSQL database server...
Oct 26 17:11:53 SRVNAME postgres[17338]: 2021-10-26 17:11:53.420 CDT [17338] FATAL:
                database files are incompatible with server
Oct 26 17:11:53 SRVNAME postgres[17338]: 2021-10-26 17:11:53.420 CDT [17338] DETAIL:
                The data directory was initialized by PostgreSQL version 13,
                which is not compatible with this version 14.0.
Oct 26 17:11:53 SRVNAME postgres[17336]: pg_ctl: could not start server
Oct 26 17:11:53 SRVNAME postgres[17336]: Examine the log output.
Oct 26 17:11:53 SRVNAME systemd[1]: postgresql.service: Control process exited, code=exited, status=1/FAILURE
Oct 26 17:11:53 SRVNAME systemd[1]: postgresql.service: Failed with result 'exit-code'.
Oct 26 17:11:53 SRVNAME systemd[1]: Failed to start PostgreSQL database server.</screen>

  <para>
    For å unngå situasjoner som dette (dvs. databaseserverprogramvaren din
    nekter å starte), les følgende diskusjon om den beste måten å
    oppgradere en DBMS (Databasestyringssystem).
  </para>

  <para>
    Grunnårsaken til feilen vist ovenfor var en oppgradering
    av serverprogramvaren til en nyere hovedversjon som forlot
    datafiler urørt. I dette tilfellet var administratoren i stand til å gjenopprette
    DBMS uten tap av data.
  </para>

  <para>
    Selv om du gjør en innledende DBMS installasjon, les gjennom denne
    seksjonen. Den gir informasjon om implementering av sikkerhetskopiering
    og gjenopprettings prosedyrer (eller i det minste en strategi for å lage
    dem) som vil tilfredsstille dine behov og garantere sikkerheten
    av dataene dine.
  </para>

  <sect2>
    <title>Oppgrader Databaseserverpakker</title>

    <para>
      Databasesystemer fungerer på filer som inneholder databasens metadata og
      data. Den interne strukturen til disse filene er optimalisert for bruk
      av serverprogramvaren. Når slik serverprogramvare oppgraderes,
      den nye programvaren kan bruke et annet filformat enn som
      tidligere var brukt. Noen ganger kan den nye programvaren
      arbeide med det gamle formatet så vel som det nye&mdash;men uten
      ytelsesforbedringer det nye formatet gir.
      Andre ganger vil den nye serverprogramvaren
      formatere datafilene automatisk etter oppgraderingen.
    </para>

    <para>
      Dessverre er det mest sannsynlige tilfellet at den nye serverprogramvaren
      klager på utdaterte filformater og utdataer. Når dette skjer,
      og du har overskrevet den gamle serverprogramvaren, kan du ende opp
      med et ødelagt system og tapte data.
    </para>

    <para>
       Endringer i datafilformater skjer vanligvis ved større versjonsendringer, men
       de kan også forekomme på andre tidspunkter. Før du oppgraderer noen DBMS
       programvare, sjekk dokumentasjonen for å se om denne oppgraderingen gjør endringer som
       krever omformatering av databasen.
    </para>

    <para>
      Selvfølgelig, hvis du har databaser med innhold som ikke er lett
      gjenoppbygd, er det alltid en god idé å lage sikkerhetskopier av databasen fra
      fra tid til annen. Før du oppgraderer serverprogramvaren, bør du kjøre
      en annen sikkerhetskopi.
    </para>

    <sect3>
      <title>Oppgrader med Sikkerhetskopiering og Gjenoppretting</title>

      <note>
        <para>
          En sikkerhetskopi er ubrukelig hvis det ikke er noen bekreftet prosess
          for å gjenopprette dataene fra denne sikkerhetskopien. Når du kjører en
          databaseserver, bør du ikke bare lage sikkerhetskopier; du
          bør også bekrefte at gjenopprettingsprosessen virkelig
          fungerer. Tiden for å teste gjenopprettingsprosedyren
          er <emphasis>før</emphasis> du som snarest trenger
          å gjenopprette tapte data.
        </para>
      </note>

      <para>
        De fleste databaseserverprogramvare gir noen grunnleggende
        verktøy for å lage sikkerhetskopier av dataene dine. Vanligvis sikkerhetskopiene opprettet med
        disse verktøyene kan leses av nyere versjoner av programvaren (via en
        gjenopprettingsverktøy). Bruk av eldre gjenopprettingsverktøy med nyere sikkerhetskopieringsdata er
        en dårlig idé; du burde <emphasis>aldri</emphasis> blindt anta det
        vil fungere. Det kan det, men vanligvis gjør det ikke det.
      </para>

      <para>
        Den enkleste måten å oppgradere databasefilene på er å
      </para>

      <itemizedlist>
        <listitem>
          <para>Lag en fullstendig sikkerhetskopi av databasen ved å bruke de gamle verktøyene.</para>

          <para>Dette trinnet oppretter en frakoblet kopi av databasefilene&mdash;for
          langsiktig arkivering, for katastrofegjenoppretting, eller som
          forberedelse til en oppgradering. Denne offline sikkerhetskopien består av enten (1) en full
          en-til-en kopi av gjeldende databasefiler, eller (2) en fullstendig sikkerhetskopi av
          databasefiler for et bestemt tidspunkt, pluss alle journaldataene (det vil si
          Oracle&reg; terminologi, kalles det "Kontinuerlig arkivering" eller
          "write ahead log (WAL)" i Postgresql) som beskriver
          endringer gjort etter dette tidspunktet. Denne andre formen tar mindre tid å lage
          (hvis DB programvaren gir denne typen journalføring) fordi du bare har
          å lagre dataene som er endret siden siste fullstendige sikkerhetskopi ble opprettet.</para>

          <para>Ved oppgradering av databaseserverprogramvare, en fullstendig sikkerhetskopi
          (som kan brukes til påfølgende inkrementelle sikkerhetskopier) bør være
          opprettet; men hvis det er mye data, vil en inkrementell sikkerhetskopi være
          nok. Den beste strategien for deg avhenger av
          mengden data som er lagret i databasen din (er det noen hundre tabeller
          rader, eller er det hundrevis av terabyte?). En full backup i sistnevnte tilfelle
          kan ikke gjøres raskt. For å
          fullstendig beskytte dataene dine, lag en sikkerhetskopi av de gamle
          programmene (og/eller deres kilder) og lagre det sammen med datafilene,
          for å være sikker på at det finnes en reserveløsning hvis
          den nye programvaren ikke kan lese de gamle dataene.</para>
          </listitem>

          <listitem>
            <para>Oppgrader serverprogramvaren</para>

            <para>I dette trinnet, instruksjoner for å bygge databaseserverprogramvaren
            kjøres akkurat slik de er vist i påfølgende avsnitt
            om DBM-ene som MariaDB eller Postgresql. Det vil si å bygge
            programvaren som vanlig ved å bruke BLFS instruksjoner.</para>
          </listitem>

          <listitem>
            <para>Gjenopprett databasen ved å bruke de nye verktøyene.</para>

            <para>For å gjenopprette dataene, verktøyene til den nylig installerte serverprogramvaren
            skal brukes. Under restaureringsprosessen, den nye
            verktøyet vil opprette og/eller oppgradere datafilene i formatet
            som ny programvare krever. Det antas at nyere programvare er i stand til
            lese gamle data.</para>
          </listitem>
          </itemizedlist>

      <para>
        Siden du allerede har en sikkerhetskopiprosedyre på plass (og du
        har testet gjenopprettingsprosedyren din, ikke sant?), kan dette
        være den enkleste måten å oppgradere siden du kan bruke dine velkjente
        prosesser for å oppgradere akkurat som du alltid gjør&mdash;i det minste når det gjelder
        sikkerhetskopieringen og gjenopprettingen.
      </para>

    </sect3>

    <sect3>
      <title>Oppgrader Databasefilene ved å Bruke Systemverktøy</title>

      <para>
        Noen databasesystemer (for eksempel Postgresql) gir
        et verktøy som kan omformatere (oppgradere) de eksisterende databasefilene
        til det nye formatet.
        Hvis du trenger å gjenopprette fra en sikkerhetskopi (for eksempel kjøring av
        oppgraderingsverktøyet mislyktes) må du installere den gamle programvaren på nytt
        for å gjenopprette dataene dine.
      </para>

      <para>
        Selv om omformateringsverktøyene kan fungere som annonsert,
        bør du lage en fullstendig sikkerhetskopi før du kjører dem. En feil
        kan forårsake alvorlig skade på databasen.
      </para>

    </sect3>

  </sect2>

  <sect2>
    <title>Merknader for spesifikke DBMS</title>

    <sect3>
      <title>PostgreSQL</title>

      <!-- might add some advanced notes for the DBMS here -->

      <para>Oppstrøms dokumentasjon for sikkerhetskopiering/gjenoppretting:
        <ulink url="https://www.postgresql.org/docs/current/backup.html"/>
      </para>

    </sect3>

    <sect3>
      <title>MariaDB</title>

      <!-- might add some advanced notes for the DBMS here -->

      <para>Oppstrøms dokumentasjon for sikkerhetskopiering/gjenoppretting:
        <ulink url="https://mariadb.com/kb/en/backup-and-restore-overview/"/>
      </para>

    </sect3>

    <sect3>
      <title>Sqlite</title>

      <!-- might add some advanced notes for the DBMS here -->

      <para>Ikke undervurder <application>Sqlite</application>. Det er en
      funksjonsrikt DBMS. Hovedforskjellen fra de to store aktørene ovenfor er
      at Sqlite ikke gir tilgang via en nettverks API. SQLite databaser
      er alltid lagret på maskinen som kjører programmet som
      bruker databasen. Manipulering av datainnhold gjøres via API kall
      til bibliotekfunksjoner direkte i programmet.</para>

      <para>I oppstrømsdokumentasjonen kan du finne følgende
      nyttig:</para>

      <para>Dokumentasjon av kommandolinjeverktøyet sqlite3:
        <ulink url="https://www.sqlite.org/cli.html"/>
      </para>

      <para>Dokumentasjon av sikkerhetskopiering API kall:
        <ulink url="https://www.sqlite.org/backup.html"/>
      </para>

      <para>Dessverre er det ikke noe dedikert kapittel i
      oppstrøms dokumentasjon som snakker om sikkerhetskopiering/gjenoppretting, men
      det er flere artikler om det på
      Internett. Her er et eksempel.</para>

      <para>Dokumentasjon for sikkerhetskopiering/gjenoppretting:
        <ulink url="https://database.guide/backup-sqlite-database/"/>
      </para>

    </sect3>

    <sect3>
      <title>LMDB</title>

      <!-- might add some advanced notes for the DBMS here -->

      <para>Som <application>Sqlite</application>, denne
      programvaren virker på lokale databasefiler; det er ingen
      nettverksgrensesnitt.</para>

      <para>De relevante ressursene for å sikkerhetskopiere/gjenopprette en LMDB-database
      er manualsidene for <filename>mdb_dump</filename> og dets
      motpart <filename>mdb_load</filename>.</para>

    </sect3>
  </sect2>

</sect1>
