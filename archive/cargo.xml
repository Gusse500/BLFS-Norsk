<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY cargo-download-http "https://github.com/rust-lang/cargo/archive/&cargo-version;/cargo-&cargo-version;.tar.gz">
  <!ENTITY cargo-download-ftp  " ">
  <!ENTITY cargo-md5sum        "c0bdbfdeead6a7cdfd7fbfe2183bfc61">
  <!ENTITY cargo-size          "624 KB">
  <!ENTITY cargo-buildsize     "129 MB pluss ekstra 115 MB i ~/.cargo og 2,2 GB for testpakken">
  <!ENTITY cargo-time          "1.8 SBU pluss 2,4 SBU for testpakken på en maskin med 4 kjerner">

  <!-- RUSTIDATE is deined in packages.ent -->
  <!-- temporarily at higgs so people can download it -->
  <!ENTITY rusti-download-http "&sources-anduin-http;/rust/rust-installer-&RUSTIDATE;.tar.xz">
  <!ENTITY rusti-md5sum        "8fb6c87f12d735b0a8bc1304d7640c69">
  <!ENTITY rusti-size          "18 KB">

  <!-- similarly, CARGOPREV is defined in packages.ent -->
  <!ENTITY cargoprev64-download-http "https://static.rust-lang.org/dist/cargo-&CARGOPREV;-x86_64-unknown-linux-gnu.tar.gz">
  <!ENTITY cargoprev64-md5sum  "ad2b513d591f35271f1041e2e04f484c">
  <!ENTITY cargoprev64-size    "4.4 MB">
  <!ENTITY cargoprev32-download-http "https://static.rust-lang.org/dist/cargo-&CARGOPREV;-i686-unknown-linux-gnu.tar.gz">
  <!ENTITY cargoprev32-md5sum  "24d4eda62991bfbaecb3a6d1e09df143">
  <!ENTITY cargoprev32-size    "4.3 MB">
]>

<sect1 id="cargo" xreflabel="cargo-&cargo-version;">
  <?dbhtml filename="cargo.html"?>


  <title>Cargo-&cargo-version;</title>

  <indexterm zone="cargo">
    <primary sortas="a-cargo">Cargo</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduksjon til cargo</title>

    <para>
      <application>Cargo</application> er Pakkebehandleren for
      <application>Rust</application>. Sånn, under byggingen bruker den
      <command>curl</command> for å laste ned <filename>cargo</filename> filer
      som faktisk er <filename>.tar.gz</filename> kildearkiver.
    </para>

    <para>
      Denne pakken krever internettilgang for å bygge og under kjøretid (når
      <command>rust</command> kompilerer en annen pakke). Den vil bruke alle
      tilgjengelige kjerner. Den trenger også gjeldende eller tidligere versjon for å kompilere
      seg selv, så her brukes en binær av forrige versjon for oppstartsprosedyren.
    </para>

    &lfs80_checked;

    <bridgehead renderas="sect3">Pakkeinformasjon</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting (HTTP): <ulink url="&cargo-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting (FTP): <ulink url="&cargo-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &cargo-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &cargo-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert diskplass som kreves: &cargo-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert byggetid: &cargo-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Ytterligere Nedlastinger</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Rust Installer:
        <ulink url="&rusti-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Installer MD5 sum: &rusti-md5sum;</para>
      </listitem>
      <listitem>
        <para>Installer størrelse: &rusti-size;</para>
      </listitem>
    </itemizedlist>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Binary nedlasting (x86_64):
        <ulink url="&cargoprev64-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Binary x86_64 MD5 sum: &cargoprev64-md5sum;</para>
      </listitem>
      <listitem>
        <para>Binary x86_64 nedlastingsstørrelse: &cargoprev64-size;</para>
      </listitem>
    </itemizedlist>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Binary nedlasting (i686):
        <ulink url="&cargoprev32-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Binary i686 MD5 sum: &cargoprev32-md5sum;</para>
      </listitem>
      <listitem>
        <para>Binary i686 nedlastingsstørrelse: &cargoprev32-size;</para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Cargo Avhengigheter</bridgehead>

    <bridgehead renderas="sect4">Påkrevd</bridgehead>
    <para role="required">
      <xref linkend="cmake"/>,
      <xref linkend="rust"/>
    </para>

    <bridgehead renderas="sect4">Valgfri</bridgehead>
    <para role="optional">
      <xref linkend="git"/>,
      <xref linkend="openssl"/>
    </para>

    <para condition="html" role="usernotes">
      Brukernotater: <ulink url="&blfs-wiki;/cargo"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installasjon av cargo</title>

    <para>
      Installer <application>cargo</application> ved å kjøre følgende
      kommandoer:
    </para>

<screen><userinput>tar -xf ../rust-installer-&RUSTIDATE;.tar.xz \
    --strip-components=1 --directory src/rust-installer &amp;&amp;

case $(uname -m) in
    x86_64) tar -xf ../cargo-&CARGOPREV;-x86_64-unknown-linux-gnu.tar.gz
    ;;
    i686) tar -xf ../cargo-&CARGOPREV;-i686-unknown-linux-gnu.tar.gz
    ;;
esac                                                 &amp;&amp;

./configure --prefix=/usr                        \
            --sysconfdir=/etc                    \
            --docdir=/usr/share/doc/cargo-&cargo-version; \
            --cargo=./cargo-nightly*/cargo/bin/cargo &amp;&amp;
make</userinput></screen>

    <para>
      For å teste resultatene, kjør: <command>CFG_DISABLE_CROSS_TESTS=1
      ./target/*-unknown-linux-gnu/release/cargo test</command>.
    </para>

    <para>
      Nå, som <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
mv -v /usr/etc/bash_completion.d/cargo /etc/bash_completion.d</userinput></screen>
  </sect2>

  <sect2 role="commands">
    <title>Parameterforklaringer</title>

    <para>
      <command>tar -xf ../rust-installer-&RUSTIDATE;.tar.xz ...</command>:
      rust-installer er nødvendig, men sendes ikke med
      <application>cargo</application>, så BLFS gir en ompakket git
      øyeblikksbilde.
    </para>

    <para>
      <parameter>--cargo=</parameter>: Dette peker på det binære av den forrige
      versjonen, slik at pakken kan startes opp. Ved oppgradering, eller hvis
      gjenoppbygging, er det mulig å bruke gjeldende installerte versjon uten
      denne bryteren, men det tar lengre tid og bruker mer plass.
    </para>

    <para>
      <command>CFG_DISABLE_CROSS_TESTS=1 ...</command>: Som standard testene
      vil prøve å dekke kryssbygg for andre arkitekturer, men BLFS
      installerer kun <command>rust</command> for vertsarkitekturen. Denne bryteren
      peker også på hvor cargo er opprettet, ved å bruke et jokertegn for å matche
      en mål-trippel mappe som er opprettet.
    </para>

    <para>
      <command>mv -v /usr/etc/bash_completion.d/cargo ...</command>: Cargo
      godtar sysconfdir bryteren, men respekterer den ikke. Dette fikser opp
      feilplassert fil.
    </para>
  </sect2>

  <sect2 role="content">
    <title>Innhold</title>

    <segmentedlist>
      <segtitle>Installert Program</segtitle>
      <segtitle>Installerte Biblioteker</segtitle>
      <segtitle>Installerte Mapper</segtitle>

      <seglistitem>
        <seg>
          cargo
        </seg>
        <seg>
          Ingen
        </seg>
        <seg>
          /usr/share/doc/cargo-&cargo-version; og
          /usr/share/zsh/site-functions.
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte Beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="cargo-prog">
        <term><command>cargo</command></term>
        <listitem>
          <para>
            er Pakkebehandleren for Rust.
          </para>
          <indexterm zone="cargo cargo-prog">
            <primary sortas="b-cargo">cargo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>
  </sect2>
</sect1>
