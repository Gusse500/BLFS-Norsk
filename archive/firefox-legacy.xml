<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY firefox-download-http "&mozilla-http;/firefox/releases/&JS78-version;esr/source/firefox-&JS78-version;esr.source.tar.xz">
  <!ENTITY firefox-download-ftp  " ">
  <!ENTITY firefox-md5sum        "453c90444bad8702fd08b71213ab2cbc">
  <!ENTITY firefox-size          "316 MB">
  <!-- NB with stylo, much of the build uses rust, and therefore cargo files.
    But the extra cached cargo files, if any, seem to be minimal -->
  <!ENTITY firefox-buildsize     "5.2 GB (186 MB installert) uten tester">
  <!-- editors: with ff63 and rust-1.29, ./mach build -j4 is probably the
   most practical way to get a timing on a machine with more cores, if taking
   cores offline is not practical. If in doubt, round up -->
  <!ENTITY firefox-time          "28 SBU (på en 4-kjerne maskin) uten tester">
]>

<sect1 id="firefox-legacy" xreflabel="Firefox-&JS78-version; Legacy">
  <?dbhtml filename="firefox-legacy.html" ?>


  <title>Firefox-&JS78-version;</title>

  <indexterm zone="firefox-legacy">
    <primary sortas="a-Firefox">Firefox Legacy</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduksjon til Firefox Legacy</title>

    <para>
      <application>Firefox</application> er en frittstående nettleser basert på
      <application>Mozilla</application> kodebase.
    </para>

    <para>Denne pakken er kjent for å bygge og fungere riktig ved å bruke en LFS-10.1
    plattform, men kan ikke bygges på systemer som bruker glibc-2.34.</para>

    <bridgehead renderas="sect3">Pakkeinformasjon</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting (HTTP): <ulink url="&firefox-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting (FTP): <ulink url="&firefox-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &firefox-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &firefox-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert diskplass som kreves: &firefox-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert byggetid: &firefox-time;
        </para>
      </listitem>
    </itemizedlist>

<!--<bridgehead renderas="sect3">Ytterligere Nedlastinger</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nødvendig oppdatering:
          <ulink url="&patch-root;/firefox-&firefox-version;esr-rust1520-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>-->

    <warning>
      <para>
        Dette er den gamle serien med firefox ESR utgivelser, den endelige utgivelsen er
        planlagt å være 78.15.0 i oktober 2021. Denne siden forventes å være
        fjernet i november 2021 når firefox-91.3 er utgitt.
      </para>

      <para>
        Hvis du bruker glibc-2.34 eller nyere, vil denne gamle versjonen av firefox
        ikke være brukbar og du bør bruke <xref linkend="firefox"/>.
      </para>

      <para>
        Det er bare to grunner til å bruke denne versjonen: enten du vil bruke
        ftp fra nettleseren og har ennå ikke en løsning, eller du har en
        system som av uforklarlige årsaker ikke kan kompilere gjeldende firefox
        (det er nå en oppdatering for å omgå det).
      </para>
    </warning>

    <note>
      <para>
        Mappenavnet er firefox-&JS78-version;
      </para>

      <para>
        Pakke ut tarballen
        vil tilbakestille tillatelsene til gjeldende mappe til 0755 hvis du
        har tillatelse til å gjøre det. Hvis du gjør dette i en mappe hvor
        den klebrige biten er satt, slik
        som <filename class="directory">/tmp</filename> vil det ende med 
        feilmeldinger:
      </para>

<literallayout>tar: .: Cannot utime: Operation not permitted
tar: .: Cannot change mode to rwxr-xr-t: Operation not permitted
tar: Exiting with failure status due to previous errors
</literallayout>

      <para>
        Dette avsluttes med ikke-null status, men det betyr
        <emphasis>Ikke</emphasis> at det er et reelt problem.
        Ikke untar som <systemitem class="username">root</systemitem> bruker
        i en mappe der sticky biten er satt - det vil deaktivere den.
      </para>

      <para>
        Som med andre store pakker som bruker C++ (eller rust), er SBU tiden
        for å bygge dette varierende mer enn du kanskje forventer. Byggetidene
        vil øke betydelig hvis maskinen din må bruke vekselminnet.
      </para>

      <para>
        Selv om oppstrøms foretrekker å bruke <application>PulseAudio</application>,
        for øyeblikket <application>Alsa</application> kan fortsatt brukes. Begge
        kan trenge kjøretidskonfigurasjon for å få lyden til å fungere.
      </para>
    </note>

    <bridgehead renderas="sect3">Firefox Avhengigheter</bridgehead>

    <bridgehead renderas="sect4">Påkrevd</bridgehead>
    <para role="required">
      <xref linkend="autoconf213"/>,
      <xref linkend="cbindgen"/>,
      <xref linkend="dbus-glib"/>,
      både <xref linkend="gtk3"/> og
      <xref linkend="gtk2"/>,
      <xref linkend="libnotify"/>,
      <xref linkend="llvm"/> (clang, brukt for bindgen selv om du bruker gcc),
      <xref linkend="nodejs"/>,
      <xref linkend="nss"/>,
      <xref linkend="pulseaudio"/>
      (eller
      <xref linkend="alsa-lib"/> hvis du redigerer mozconfig;
        nå avviklet av mozilla), i begge tilfeller vennligst les
        Konfigurasjonsinformasjon,
      <!-- rustc is required by cbindgen so not needed here
      <xref linkend="rust"/>,-->
      <xref linkend="python3"/> (gjenoppbygget etter installasjon <xref linkend="sqlite"/>),
      <xref linkend="startup-notification"/>,
      <xref linkend="unzip"/>,
      <xref linkend="yasm"/>, og
      <xref linkend="zip"/>
    </para>

    <bridgehead renderas="sect4">Anbefalt</bridgehead>
    <para role="recommended">
      <xref linkend="icu"/>,
      <xref linkend="libevent"/>,
      <xref linkend="libwebp"/>,
      <xref linkend="nasm"/>
    </para>

    <note>
      <para>
        Hvis du ikke installerer anbefalte avhengigheter, så blir interne kopier av
        disse pakkene brukt. De kan bli testet for å fungere, men de kan
        være utdatert eller inneholde sikkerhetshull.
      </para>
    </note>

    <bridgehead renderas="sect4">Valgfri</bridgehead>
    <para role="optional">
      <xref linkend="curl"/>,
      <xref linkend="doxygen"/>,
      <xref role="runtime" linkend="ffmpeg"/> (kjøretid, for å spille mov, mp3 eller mp4 filer),
      <!--      <phrase revision="sysv"><ulink url="https://sourceforge.net/projects/liboauth/files/">liboauth</ulink></phrase> -->
      <xref linkend="liboauth"/>,
      <xref linkend="openjdk"/>,
      <xref linkend="valgrind"/>,
      <xref linkend="wget"/>,
      <xref linkend="wireless_tools"/>,
      <ulink url="https://github.com/libproxy/libproxy">libproxy</ulink>
    </para>

    <para condition="html" role="usernotes">
      Brukernotater: <ulink url="&blfs-wiki;/firefox"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installasjon av Firefox Legacy</title>

    <para>
      Konfigurasjonen av <application>Firefox</application> er oppnådd
      ved å lage en <filename>mozconfig</filename> fil som inneholder ønsket
      konfigurasjonsalternativer. En standard <filename>mozconfig</filename> er
      opprettet nedenfor. For å se hele listen over tilgjengelige konfigurasjonsalternativer
      (og en forkortet beskrivelse av noen av dem), utsted <command>./mach
      configure &amp;&amp; ./configure --help | less</command>. Du kan også
      se gjennom hele filen og fjerne kommentarer til andre ønskede alternativer.
      Opprett filen ved å gi følgende kommando:
    </para>

<screen><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
<literal># If you have a multicore machine, all cores will be used by default.

# If you have installed (or will install) wireless-tools, and you wish
# to use geolocation web services, comment out this line
ac_add_options --disable-necko-wifi

# API Keys for geolocation APIs - necko-wifi (above) is required for MLS
# Uncomment the following line if you wish to use Mozilla Location Service
#ac_add_options --with-mozilla-api-keyfile=$PWD/mozilla-key

# Uncomment the following line if you wish to use Google's geolocaton API
# (needed for use with saved maps with Google Maps)
#ac_add_options --with-google-location-service-api-keyfile=$PWD/google-key

# startup-notification is required since firefox-78

# Uncomment the following option if you have not installed PulseAudio
#ac_add_options --disable-pulseaudio
# or uncomment this if you installed alsa-lib instead of PulseAudio
#ac_add_options --enable-alsa

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --with-system-libevent
ac_add_options --with-system-webp
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu

# Do not specify the gold linker which is not the default. It will take
# longer and use more disk space when debug symbols are disabled.

# libdavid (av1 decoder) requires nasm. Uncomment this if nasm
# has not been installed.
#ac_add_options --disable-av1

# You cannot distribute the binary if you do this
ac_add_options --enable-official-branding

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# Disabling debug symbols makes the build much smaller and a little
# faster. Comment this if you need to run a debugger. Note: This is
# required for compilation on i686.
ac_add_options --disable-debug-symbols

# The elf-hack is reported to cause failed installs (after successful builds)
# on some machines. It is supposed to improve startup time and it shrinks
# libxul.so by a few MB - comment this if you know your machine is not affected.
ac_add_options --disable-elf-hack

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser
ac_add_options --disable-crashreporter
ac_add_options --disable-updater
# enabling the tests will use a lot more space and significantly
# increase the build time, for no obvious benefit.
ac_add_options --disable-tests

# The default level of optimization again produces a working build with gcc.
ac_add_options --enable-optimize

ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

# --with-system-bz2 was removed in firefox-78
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

# The following option unsets Telemetry Reporting. With the Addons Fiasco,
# Mozilla was found to be collecting user's data, including saved passwords and
# web form data, without users consent. Mozilla was also found shipping updates
# to systems without the user's knowledge or permission.
# As a result of this, use the following command to permanently disable
# telemetry reporting in Firefox.
unset MOZ_TELEMETRY_REPORTING

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir</literal>
EOF</userinput></screen>

    <para>
      Kompilere <application>Firefox</application> ved å utstede følgende
      kommandoer:
    </para>

<!--<para>
      Bruk en oppdatering som forhindrer krasj når du åpner HTML videoer hvis
      kompilering mot rust-1.52.0 eller høyere:
    </para>

<screen><userinput>patch -Np1 -i ../firefox-&firefox-version;esr-rust1520-1.patch</userinput></screen>-->

    <para>
      I esr versjonen av firefox-78, koden for å sikre at programtillegg
      er signert av den pålitelige roten har blitt deaktivert, antagelig for
      organisasjoner som trenger egne programtillegg. For å aktivere det som et
      ekstra sikkerhetstiltak utsted følgende kommando:
    </para>

<screen><userinput>sed -e 's/Disable/Enable/'            \
    -e '/^MOZ_REQUIRE_SIGNING/s/0/1/' \
    -i build/mozconfig.common</userinput></screen>

    <para>
      Hvis geolokaliserings APIene er nødvendige:
    </para>

    <note>
      <para>
        <!-- Taken from Arch Linux - an immensely helpful link - Thanks -->
        Google og Mozilla API nøkler nedenfor er spesifikke for LFS. Hvis du bruker
        disse instruksjonene for en annen distro, eller hvis du har tenkt å distribuere
        binære kopier av programvaren ved å bruke disse instruksjonene, hent
        dine egne nøkler ved å følge instruksjonene på
        <ulink url="http://www.chromium.org/developers/how-tos/api-keys"/> og
        <ulink url="https://location.services.mozilla.com/api"/> henholdsvis.
        <!-- BLFS Devs, register an account at Google with your
        @linuxfromscratch.org email address, and I'll make you an administrator
        for the 'Google APIs for LFS' project (where the API and OAuth keys
        were created for use in the book).-->
      </para>
    </note>

<screen><userinput>echo "AIzaSyDxKL42zsPjbke5O8_rPVpVrLrJ8aeE9rQ" > google-key
echo "613364a7-9418-4c86-bcee-57e32fd70c23" > mozilla-key</userinput></screen>

    <note>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="../../xincludes/mozshm.xml"/>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="../../xincludes/mozmach.xml"/>

    </note>
    <!--
    <para>
      If you are building on i686, apply a fix to prevent Internal Compiler
      Errors in GCC-7+:
    </para>

<screen><userinput remap="pre">case $(uname -m) in
   i?86) sed -i "562 s/mips64/i386/" gfx/skia/skia/third_party/skcms/src/Transform_inl.h ;;
esac</userinput></screen>
    -->
<!--<para>
      Apply a patch to allow this to be compiled with <xref linkend="rust"/>:
    </para>

<screen><userinput remap="pre">patch -p1 -i ../firefox-&firefox-version;esr-rustc1470-1.patch</userinput></screen>-->

    <para>
      Påkall nå Python skriptet for å kompilere pakken.
    </para>

<screen><userinput>export CC=gcc CXX=g++ &amp;&amp;
export MOZBUILD_STATE_PATH=${PWD}/mozbuild &amp;&amp;
./mach configure                           &amp;&amp;
./mach build</userinput></screen>

    <para>
      <filename>mozconfig</filename> ovenfor deaktiverer testene fordi
      de bruker mye mer tid og diskplass uten noen åpenbar fordel. Hvis
      du likevel har aktivert dem, kan du kjøre testene ved å kjøre
      <command>./mach gtest</command>. Dette vil kreve en nettverkstilkobling,
      og å bli kjørt fra en Xorg økt - det er en sprettopp dialog
      når den ikke klarer å koble til ALSA (det skaper ikke en mislykket test).
      En eller to tester vil mislykkes. For å se detaljene om feilen(e) må du
      logge utdataene fra den kommandoen slik at du kan se gjennom den.
    </para>

    <para>
      Nå, som <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"><userinput>./mach install</userinput></screen>

    <para>
      Sett miljøvariabler tilbake til deres verdier:
    </para>

<screen><userinput>unset CC CXX MOZBUILD_STATE_PATH</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Parameterforklaringer</title>

<!--<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/SIOCGSTAMP.xml"/>-->

    <para>
      <command>export CC=gcc CXX=g++ ...</command>: Oppstrøms foretrekker nå
      <application>clang</application> slik at de kan bruke én kompilator
      overalt. På X86 arkitekturene <application>clang</application>
      ser nå ut til å støtte de fleste av de samme sikkerhetsherdealternativene som
      <application>GCC</application>.
      <!-- supported in llvm-11
      but the newer
      <literal>-fstack-clash-protection</literal> is still not supported.-->
      Med gjeldende versjoner og standardflagg,
      <application>GCC</application> skaper et marginalt større bygg, men
      tar vanligvis 2 SBU mindre tid på en 4-kjerners maskin som bruker mozconfig
      ovenfor.
    </para>

    <para>
      <command>export MOZBUILD_STATE_PATH=${PWD}/mozbuild</command>: Bygget
      er nå ment å fortelle deg at den har til hensikt å opprette <filename
      class="directory">~/.mozbuild</filename>, og tilby deg et alternativ for
      å trykke &lt;ENTER&gt; for å akseptere dette, eller Ctrl-C for å avbryte og starte bygget på nytt
      etter å ha spesifisert mappen. I praksis kan det hende at meldingen ikke
      vises til etter at &lt;ENTER&gt; er trykket, dvs. byggingen stopper.
    </para>

    <para>
      Denne mappen brukes for en (sannsynligvis tilfeldig) telemetriidentifikator.
      Opprette dette i byggemappen, og slette det etter
      installasjon, hindrer den i å bli brukt. Hvis du ønsker å delta
      i telemetri, eksporter MOZBUILD_STATE_PATH for å peke til standardmappen.
    </para>

    <para>
      <command>./mach build</command>: <application>Firefox</application>
      bruker nå dette <application>python</application> skript til å kjøre
      byggingen og installeringen.
    </para>

    <para>
      <option>./mach build --verbose</option>: Bruk dette alternativet hvis du
      trenger detaljer om hvilke filer som kompileres, sammen med eventuelle C eller
      C++ flagg som brukes. Men ikke legg til '--verbose' til installeringskommandoen,
      det er ikke akseptert der.
    </para>

    <para>
      <option>./mach build -jN</option>: Byggingen skal som standard bruke
      alle online tilgjengelige kjerner. Hvis bruk av alle kjernene får bygget til å bruke vekselminnet
      fordi du har utilstrekkelig minne, kan det gå raskere å bruke færre kjerner.
    </para>

<!--
    <para>
      <command>mkdir -pv /usr/lib/mozilla/plugins</command>: This ensures
      that <filename class="directory">/usr/lib/mozilla/plugins/</filename>
      exists.
    </para>

    <para>
      <command>ln -sv ... /usr/lib/firefox/browser</command>:
      This command creates a symbolic link to <filename
      class="directory">/usr/lib/mozilla/plugins</filename>. It's not really
      needed, as <application>Firefox</application> checks <filename
      class="directory">/usr/lib/mozilla/plugins</filename> by default, but the
      symbolic link is made to keep all the plugins installed in one folder.
    </para>
-->

  </sect2>

  <sect2 role="configuration">
    <title>Konfigurere Firefox</title>

    <para>
      Hvis du bruker et skrivebordsmiljø som <application>Gnome</application> eller
      <application>KDE</application> kan du lage en
      <filename>firefox.desktop</filename> fil sånn at
      <application>Firefox</application> vises i panelets menyer. <!--If you
      didn't enable startup-notification in your mozconfig change the
      StartupNotify line to false.--> Som
      <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"><userinput>mkdir -pv /usr/share/applications &amp;&amp;
mkdir -pv /usr/share/pixmaps &amp;&amp;

MIMETYPE="text/xml;text/mml;text/html"                                     &amp;&amp;
MIMETYPE="$MIMETYPE;application/xhtml+xml;application/vnd.mozilla.xul+xml" &amp;&amp;
MIMETYPE="$MIMETYPE;x-scheme-handler/http;x-scheme-handler/https"          &amp;&amp;

cat &gt; /usr/share/applications/firefox.desktop &lt;&lt; EOF &amp;&amp;
<literal>[Desktop Entry]
Encoding=UTF-8
Name=Firefox Web Browser
Comment=Browse the World Wide Web
GenericName=Web Browser
Exec=firefox %u
Terminal=false
Type=Application
Icon=firefox
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=$MIMETYPE
StartupNotify=true</literal>
EOF

unset MIMETYPE &amp;&amp;

ln -sfv /usr/lib/firefox/browser/chrome/icons/default/default128.png \
        /usr/share/pixmaps/firefox.png</userinput></screen>

    <sect3><title>Konfigurasjonsinformasjon</title>

      <para>
        Applikasjonsinnstillingene for firefox er tilgjengelige ved å taste
        <command>about:config</command> i adressefeltet.
      </para>

      <para>
        Av og til for å få fungerende lyd
        <application>firefox</application> kan være et problem. Skjønt oppstrøms
        foretrekker pulsaudio,
        å få balanse ved hjelp av <application>Alsa</application> kan være lettere.
      </para>

      <para>
        Hvis du har aktivert <application>Alsa</application> for lyd, kan det hende du trenger
         å endre én variabel for å få fungerende lyd. Hvis du kjører
        <command>firefox</command> fra en terminal og prøv å spille noe med
        lyd kan du støte på feilmeldinger som:
      </para>

      <para>
         <literal>Sandbox: seccomp sandbox violation: pid 3941, tid 4030,
         syscall 16, args 48 2147767296 139909894784796 0 0 0.</literal>
      </para>

      <para>
        Det var på x86_64, på i686 er syscall-nummeret 54. For å tillate dette
        syscall, i <command>about:config</command> endre
        <command>security.sandbox.content.syscall_whitelist</command> til 16
        (eller 54 hvis du bruker i686).
      </para>

      <para>
        Hvis du bruker <command>pulseaudio</command> i et skrivebordsmiljø, det
        kan allerede være startet av det skrivebordsmiljøet. Men hvis det ikke er det, skjønt
        firefox-57 klarte å starte den, firefox-58 gjorde det ikke. Hvis du kjører
        <command>firefox</command> fra en terminal og dette problemet er tilstede,
        prøve å spille av lyd vil
        støte på feilmeldinger advarsel <literal>Can't get cubeb
        context!</literal>
      </para>

    <para>
      Løsningen for dette er å lukke firefox, starte pulsaudio for å sjekke det
      starter (hvis ikke, les informasjonen om konfigurering i <xref
      linkend="pulseaudio"/>) og start firefox på nytt for å sjekke at det fungerer.
      Hvis det nå fungerer, legg til følgende i din <filename>~/.xinitrc</filename>:
<phrase revision="sysv">
<literal>pulseaudio --verbose --log-target=syslog&amp;</literal></phrase>
<phrase revision="systemd">
<literal>pulseaudio --verbose --log-target=journald&amp;</literal></phrase>
        (dessverre, på noen systemer fungerer ikke dette).
      </para>

      <para>
        Det kan bruke flere profiler i firefox. For å gjøre det, påkall
        firefox som <command>firefox --ProfileManager</command>. Du kan også
        sjekke hvilken profil som er i bruk fra
        <command>about:profiles</command>.
      </para>

      <para>
        Selv om WebRender (bruker GPU for komposisjon) ikke brukes som
        standard, ser det nå ut til å fungere bra på støttet maskinvare (ATI, Nvidia
        og Intel GPUer med Mesa-18 eller nyere. For en forklaring, se
        <ulink
       url="https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/">hacks.mozilla.org</ulink>.
       Den eneste ulempen ser ut til å være at på en maskin med begrenset RAM kan det hende det
       bruke mer RAM.
     </para>

    <para>
      For å sjekke om WebRender brukes, se i about:support. I grafikk
      seksjonen Compositing vil enten vise 'Basic' (dvs. ikke i bruk) eller
      'WebRender'. For å aktivere det, gå til about:config og endre gfx.webrender.all
      til True. Du må starte firefox på nytt.
    </para>

    <para>
      Det kan være nyttig å nevne prosessene fra firefox som kan dukke opp i
      <command>top</command> - så vel som firefox selv, kan det være flere
      nettinnholds prosesser, og nå en RDD prosess (Remote Data Decoder) som
      vises når du spiller av nettvideoer kodet med av1 (libdav1d). Hvis WebRender
      har blitt aktivert, vil en GPU prosess også vises når firefox må
      male på nytt (f.eks. bla, åpne en ny fane eller spille av en video).
    </para>

    </sect3>
  </sect2>

  <sect2 role="content">
    <title>Innhold</title>

    <segmentedlist>
      <segtitle>Installerte Programmer</segtitle>
      <segtitle>Installerte Biblioteker</segtitle>
      <segtitle>Installert Mappe</segtitle>

      <seglistitem>
        <seg>
          firefox
        </seg>
        <seg>
          Tallrike biblioteker, nettleserkomponenter, programtillegg, utvidelser og
          hjelpemoduler installert i /usr/lib/firefox
        </seg>
        <seg>
	  /usr/lib/firefox og /usr/lib/mozilla
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte Beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="firefox-legacy-prog">
        <term><command>firefox</command></term>
        <listitem>
          <para>
	    er en <application>GTK+-3</application> nettleser som bruker
	    Mozilla Gecko gjengivelsesmotoren
          </para>
          <indexterm zone="firefox-legacy firefox-legacy-prog">
            <primary sortas="b-firefox">firefox</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
