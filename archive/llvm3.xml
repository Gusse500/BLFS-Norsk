<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!-- for the moment, this is internally llvm-old but visibly llvm3
   so that when rust eventually understands a less-old version the
   visible fields, and the page itself, can be moved to that newer
   number -->
  <!ENTITY llvm-old-download-http "http://llvm.org/releases/&llvm-old-version;/llvm-&llvm-old-version;.src.tar.xz">
  <!ENTITY llvm-old-download-ftp  " ">
  <!ENTITY llvm-old-md5sum        "3259018a7437e157f3642df80f1983ea">
  <!ENTITY llvm-old-size          "18 MB">
  <!ENTITY llvm-old-buildsize     "663 MB (112 MB installert) pluss 101 MB for testpakken">
  <!ENTITY llvm-old-time          "6.9 SBU (pluss 1,8 SBU for testpakken, begge med parallellitet=4)">
]>

<sect1 id="llvm-old" xreflabel="LLVM-&llvm-old-version;">
  <?dbhtml filename="llvm-old.html"?>


  <title>LLVM-&llvm-old-version;</title>

  <indexterm zone="llvm-old">
    <primary sortas="a-llvm3">LLVM3</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduksjon til llvm3</title>

    <para>
      Dette er en gammel versjon av <application>llvm</application>, installert
      i /opt slik at <xref linkend="rust"/> kan bruke den. For vanlig bruk bør
      du installere <xref linkend="llvm"/>.
    </para>

    <para>
      Denne versjonen av <application>LLVM</application> pakken inneholder gamle
      versjoner av bibliotekene, ved hjelp av APIen som
      <application>Rust</application> forventer. Selv om <xref linkend="rust"/>
      leveres med en versjon av LLVM-3.9 og vil bygge og koble til den statisk,
      dens <application>rustbuild</application> byggesystem vil alltid kompilere
      et stort antall krysskompilatorer for ulike arkitekturer. Å bruke en
      separat LLVM unngår det.
    </para>

    <para>
      Ved å bruke en separat <application>LLVM-3.9.1</application> det vil være
      mulig å spare tid ved oppgradering av <application>Rust</application> (den
      totale tiden for det første bygget vil være lik både med og uten
      separat <application>LLVM-3.9.1</application>).
    </para>

    &lfs80_checked;

    <bridgehead renderas="sect3">Pakkeinformasjon</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting (HTTP): <ulink url="&llvm-old-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting (FTP): <ulink url="&llvm-old-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &llvm-old-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &llvm-old-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert diskplass som kreves: &llvm-old-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert byggetid: &llvm-old-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">llvm3 Avhengigheter</bridgehead>

    <bridgehead renderas="sect4">Påkrevd</bridgehead>
    <para role="required">
      <xref linkend="cmake"/>
    </para>

    <bridgehead renderas="sect4">Anbefalt</bridgehead>
    <para role="recommended">
      <xref linkend="python2"/>
    </para>

    <bridgehead renderas="sect4">Valgfri</bridgehead>
    <para role="optional">
      <xref linkend="doxygen"/>,
      <xref linkend="graphviz"/>,
      <xref linkend="libffi"/> (hvis du tvinger dette til å bli
      brukt, bygging av <xref linkend="rust"/> vil måtte endres)
      <xref linkend="libxml2"/>,
      <xref linkend="texlive"/> (eller <xref linkend="tl-installer"/>),
      <xref linkend="valgrind"/>,
      <xref linkend="zip"/>,
      <ulink url="http://www.ocaml.org/">OCaml</ulink>, og
      <ulink url="https://pypi.python.org/pypi/Sphinx">Sphinx</ulink>
    </para>

    <para condition="html" role="usernotes">
      Brukernotater: <ulink url="&blfs-wiki;/llvm3"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installasjon av llvm3</title>

    <para>
      Installer <application>llvm3</application> ved å kjøre følgende
      kommandoer:
    </para>

<screen><userinput>mkdir -v build                           &amp;&amp;
cd       build                           &amp;&amp;

CC=gcc CXX=g++                           \
cmake -DCMAKE_INSTALL_PREFIX=/opt/llvm3  \
      -DCMAKE_BUILD_TYPE=Release         \
      -DLLVM_BUILD_LLVM_DYLIB=ON         \
      -DLLVM_LINK_LLVM_DYLIB=ON          \
      -DLLVM_TARGETS_TO_BUILD="host"     \
      -DLLVM_INSTALL_UTILS=ON            \
      -Wno-dev ..                        &amp;&amp;
make</userinput></screen>

    <para>
      For å teste resultatene, kjør: <command>make check-all</command>. Testene
      kjøres med maksimalt antall prosessorer/tråder som er tilgjengelige, men
      hoveddelen av den ekstra tiden brukes på å kompilere testprogrammene. Dette
      fungerer fint med parallell make.
    </para>

    <para>
      Nå, som <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"><userinput>echo "/opt/llvm3/lib" >> /etc/ld.so.conf &amp;&amp;
make install                             &amp;&amp;
/sbin/ldconfig                           &amp;&amp;
ln -sfv /opt/llvm3/bin/FileCheck /usr/bin</userinput></screen>

    <para>
      Bygge dokumentasjonen for <emphasis>nåværende</emphasis> LLVM er
      dekket i <xref linkend="llvm"/>, bygge dokumenter for denne gamle versjonen
      ville være lik, men nesten alle som trenger denne gamle versjonen
      trenger også gjeldende versjon for <xref linkend="mesa"/> sånn er det
      overflødig å installere dokumentene her.
    </para>

  </sect2>

  <sect2 role="commands">
    <title>Parameterforklaringer</title>

    <para>
      <parameter>-DLLVM_INSTALL_UTILS_=ON</parameter>: Denne bryteren aktiverer
      installasjon av gamle hjelpeprogrammer. Av disse,
      <application>rust</application> ser etter <command>FileCheck</command>
      når konfigureringen sjekker for et system LLVM, de andre brukes ikke.
    </para>

    <para>
      <parameter>/sbin/ldconfig</parameter>: Dette sikrer at bibliotekene blir
      funnet.
    </para>

    <para>
      <parameter>ln -sfv /opt/llvm3/bin/FileCheck /usr/bin</parameter>: Dette
      sikrer at FileCheck kan bli funnet av <application>rust</application>
      selv om <filename class="directory">/opt/llvm3/bin</filename> er ikke
      i PATH (å ha to versjoner av <application>LLVM</application>
      generelt tilgjengelig har vært kjent å forårsake hodepine).
    </para>

  </sect2>

  <sect2 role="content">
    <title>Innhold</title>

    <segmentedlist>
      <segtitle>Installerte Programmer</segtitle>
      <segtitle>Installerte Biblioteker</segtitle>
      <segtitle>Installert Mappe</segtitle>

      <seglistitem>
        <seg>
          bugpoint, count, FileCheck,
          llc, lli, llvm-ar, llvm-as, llvm-bcanalyzer, llvm-config, llvm-cov,
          llvm-c-test, llvm-cxxdump, llvm-diff, llvm-dis, llvm-dsymutil,
          llvm-dwarfdump, llvm-dwp, llvm-extract, llvm-lib (symlink to
          llvm-ar), llvm-link, llvm-lto, llvm-mc, llvm-mcmarkup, llvm-nm,
          llvm-objdump, llvm-pdbdump, llvm-profdata, llvm-ranlib (symlink to
          llvm-ar), llvm-readobj, llvm-rtdyld, llvm-size, llvm-split,
          llvm-stress, llvm-symbolizer, llvm-tblgen, not, obj2yaml, opt, sancov,
          sanstats, verify-uselistorder, yaml-bench og yaml2obj
        </seg>
        <seg>
          BugpointPasses.so,  LLVMHello.so, libLLVM.so, libLLVM*.a (50
          biblioteker), libLTO.so
        </seg>
        <seg>
          /opt/llvm3
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte Beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="FileCheck">
        <term><command>FileCheck</command></term>
        <listitem>
          <para>
            leser to filer (en fra standard inndata, den andre spesifisert på
            kommandolinjen) og bruker den ene til å bekrefte den andre.
          </para>
          <indexterm zone="llvm-old FileCheck">
            <primary sortas="b-FileCheck">FileCheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>
      For detaljer om de andre elementene i denne pakken, se <xref linkend="llvm"/>.
    </para>

  </sect2>
</sect1>
