<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY llvm-url "https://github.com/llvm/llvm-project/releases/download/llvmorg-&llvm-version;">

  <!ENTITY llvm-download-http "&llvm-url;/llvm-&llvm-version;.src.tar.xz">
  <!ENTITY llvm-download-ftp  " ">
  <!ENTITY llvm-md5sum        "d9185fc007c32aea27a6de3c7c1eb90d">
  <!ENTITY llvm-size          "54 MB">
  <!ENTITY llvm-buildsize     "3.1 GB (938 MB installert; legg til 20 GB for tester og 308 MB for dokumentasjon)">
  <!ENTITY llvm-time          "13 SBU (Legg til 8 SBU for tester; begge bruker parallellisme=8)">

  <!ENTITY clang-download-http "&llvm-url;/clang-&llvm-version;.src.tar.xz">
  <!ENTITY clang-md5sum        "cb3e79db62c4c3b78cfcdebe66b00268">
  <!ENTITY clang-size          "20 MB">

  <!ENTITY compiler-rt-download-http "&llvm-url;/compiler-rt-&llvm-version;.src.tar.xz">
  <!ENTITY compiler-rt-md5sum        "3061b4cb0b2428a32b4fb5db540fe66c">
  <!ENTITY compiler-rt-size          "2.3 MB">

  <!-- CMake modules and third party dependencies renamed and uploaded
       onto anduin to avoid stupid file names.  -->

  <!ENTITY cmake-llvm-download-http "&sources-anduin-http;/llvm/llvm-cmake.src.tar.xz">
  <!ENTITY cmake-llvm-md5sum         "356a1aff675d281d7c76165269d33bd5">
  <!ENTITY cmake-llvm-size           "9 KB">

  <!ENTITY llvm-3rdparty-download-http "&sources-anduin-http;/llvm/llvm-third-party.src.tar.xz">
  <!ENTITY llvm-3rdparty-md5sum        "8b506e49e5fa4c41186ba8ba7da5af82">
  <!ENTITY llvm-3rdparty-size          "376 KB">
]>

<sect1 id="llvm" xreflabel="LLVM-&llvm-version;">
  <?dbhtml filename="llvm.html" ?>


  <title>LLVM-&llvm-version;</title>

  <indexterm zone="llvm">
    <primary sortas="a-LLVM">LLVM</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduksjon til LLVM</title>

    <para>
      <application>LLVM</application> pakken inneholder en samling av
      modulære og gjenbrukbare kompilator og verktøykjedet eknologier. Den lave nivået
      Virtuelle maskin (LLVM) Kjernebiblioteker gir en moderne kilde og
      mål uavhengig optimaliserer, sammen med kodegenereringsstøtte for mange
      populære CPUer (samt noen mindre vanlige!). Disse bibliotekene er
      bygget rundt en godt spesifisert koderepresentasjon kjent som LLVM
      mellomrepresentasjon ("LLVM IR").
    </para>

    <para>
      <application>Clang</application> gir nye C, C++, Objective C
      og Objective C++ grensesnitt for <application>LLVM</application> og
      kreves av noen skrivebordspakker som f.eks <application>firefox</application>
      og for <application>rust</application> hvis det er bygget ved hjelp av systemets
      <application>LLVM</application>.
    </para>

    <para>
      <application>Compiler RT</application> pakken gir
      kjøretids rense og profilerings biblioteker for utviklere som bruker
      <application>Clang</application> og <application>LLVM</application>.
    </para>

    &lfs120_checked;

    <bridgehead renderas="sect3">Pakkeinformasjon</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting (HTTP): <ulink url="&llvm-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting (FTP): <ulink url="&llvm-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &llvm-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &llvm-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert diskplass som kreves: &llvm-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert byggetid: &llvm-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Ytterligere Nedlastinger</bridgehead>
    <para>
      <emphasis role="strong">Cmake moduler for LLVM</emphasis>
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting: <ulink url="&cmake-llvm-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &cmake-llvm-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &cmake-llvm-size;
        </para>
      </listitem>
    </itemizedlist>

    <para>
      <emphasis role="strong">Tredjepartsavhengigheter for LLVM byggesystemet</emphasis>
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting: <ulink url="&llvm-3rdparty-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &llvm-3rdparty-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &llvm-3rdparty-size;
        </para>
      </listitem>
    </itemizedlist>


    <bridgehead renderas="sect3">Anbefalt Nedlasting</bridgehead>
    <para>
      <emphasis role="strong">Clang</emphasis>
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting: <ulink url="&clang-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &clang-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &clang-size;
        </para>
      </listitem>
    </itemizedlist>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Oppdatering som aktiverer <xref linkend="gSSP"/> som standard i clang:
          <ulink url="&patch-root;/clang-&llvm-version;-enable_default_ssp-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Valgfri Nedlasting</bridgehead>
    <para>
      <emphasis role="strong">Compiler RT</emphasis>
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting: <ulink url="&compiler-rt-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &compiler-rt-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &compiler-rt-size;
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">LLVM Avhengigheter</bridgehead>

    <bridgehead renderas="sect4">Påkrevd</bridgehead>
    <para role="required">
      <xref linkend="cmake"/>
    </para>

    <bridgehead renderas="sect4">Valgfri</bridgehead>
    <para role="optional">
      <xref linkend="doxygen"/>,
      <xref linkend="git"/>,
      <xref linkend="graphviz"/>,
      <xref linkend="libxml2"/>,
      <xref linkend="pygments"/>,
      <xref linkend="rsync"/> (for tester),
      <xref linkend="recommonmark"/> (for å bygge dokumentasjonen),
      <xref linkend="texlive"/> (eller <xref linkend="tl-installer"/>),
      <xref linkend="valgrind"/>,
      <xref linkend="PyYAML"/>, <!-- for yaml2obj -->
      <xref linkend="zip"/>,
      <ulink url="https://ocaml.org/">OCaml</ulink>,
      <ulink url="https://pypi.org/project/psutil/">psutil</ulink> (for tester),
      og <ulink url="https://github.com/Z3Prover/z3">Z3</ulink>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installasjon av LLVM</title>

    <para>
      To ekstra tarballer
      <filename>llvm-cmake.src.tar.xz</filename> og
      <filename>llvm-third-party.src.tar.xz</filename> er
      nødvendig for LLVM byggesystemet. Oppstrøms forventer at de trekkes ut
      på samme nivå som
      <filename>llvm-&llvm-version;.src.tar.xz</filename> tarballen,
      og de utpakkede mappene omdøpt til
      <filename class="directory">cmake</filename> og
      <filename class="directory">third-party</filename>.  Pakk dem ut og
      endre byggesystemet for å unngå å lage tvetydige navn
      på mapper utenfor
      <filename>llvm-&llvm-version;.src</filename> hierarkiet:
    </para>

<screen><userinput>tar -xf ../llvm-cmake.src.tar.xz                                   &amp;&amp;
tar -xf ../llvm-third-party.src.tar.xz                             &amp;&amp;
sed '/LLVM_COMMON_CMAKE_UTILS/s@../cmake@llvm-cmake.src@'          \
    -i CMakeLists.txt                                              &amp;&amp;
sed '/LLVM_THIRD_PARTY_DIR/s@../third-party@llvm-third-party.src@' \
    -i cmake/modules/HandleLLVMOptions.cmake</userinput></screen>

    <para>
      Installer <application>clang</application> inn i
      kildetreet ved å kjøre følgende kommandoer:
    </para>

<screen><userinput>tar -xf ../clang-&llvm-version;.src.tar.xz -C tools &amp;&amp;
mv tools/clang-&llvm-version;.src tools/clang</userinput></screen>

    <para>
      Hvis du har lastet ned <application>compiler-rt</application>,
      installer den i kildetreet ved å kjøre følgende kommandoer:
    </para>

<screen><userinput>tar -xf ../compiler-rt-&llvm-version;.src.tar.xz -C projects &amp;&amp;
mv projects/compiler-rt-&llvm-version;.src projects/compiler-rt</userinput></screen>

    <para>
     Det er mange Python skript i denne pakken som bruker
     <command>/usr/bin/env python</command> for å få tilgang til systemets Python
     som på LFS er <xref linkend="python3"/>. Bruk følgende kommando
     for å fikse disse skriptene:
    </para>

<screen><userinput>grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'</userinput></screen>

    <para>
      Hvis du har lastet ned <application>clang</application>,
      bruk følgende oppdatering for å aktivere <xref linkend="gSSP"/> som standard
      i kompilerte programmer.
    </para>
<!-- need <../<patch> instead of -i because -d changes directory
     before applying -i -->
<screen><userinput remap="pre">patch -Np2 -d tools/clang &lt;../clang-&llvm-version;-enable_default_ssp-1.patch</userinput></screen>

    <para>
      Hvis du har lastet ned <application>compiler-rt</application>,
      fiks en testsak som er ødelagt som standard SSP i
      <application>clang</application>:
    </para>

<screen><userinput remap="pre">sed 's/clang_dfsan/&amp; -fno-stack-protector/' \
    -i projects/compiler-rt/test/dfsan/origin_unaligned_memtrans.c</userinput></screen>

    <para>
      Installer <application>LLVM</application> ved å kjøre følgende
      kommandoer:
    </para>

<screen><userinput>mkdir -v build &amp;&amp;
cd       build &amp;&amp;

CC=gcc CXX=g++                                  \
cmake -DCMAKE_INSTALL_PREFIX=/usr               \
      -DLLVM_ENABLE_FFI=ON                      \
      -DCMAKE_BUILD_TYPE=Release                \
      -DLLVM_BUILD_LLVM_DYLIB=ON                \
      -DLLVM_LINK_LLVM_DYLIB=ON                 \
      -DLLVM_ENABLE_RTTI=ON                     \
      -DLLVM_TARGETS_TO_BUILD="host;AMDGPU;BPF" \
      -DLLVM_BINUTILS_INCDIR=/usr/include       \
      -DLLVM_INCLUDE_BENCHMARKS=OFF             \
      -DCLANG_DEFAULT_PIE_ON_LINUX=ON           \
      -Wno-dev -G Ninja ..                      &amp;&amp;
ninja</userinput></screen>

    <para>
      Hvis du har installert <xref linkend="recommonmark"/> og dets
      avhengigheter, kan du generere html dokumentasjonen og
      manualsider med følgende kommandoer:
    </para>

<screen remap="doc"><userinput>cmake -DLLVM_BUILD_DOCS=ON            \
      -DLLVM_ENABLE_SPHINX=ON         \
      -DSPHINX_WARNINGS_AS_ERRORS=OFF \
      -Wno-dev -G Ninja ..            &amp;&amp;
ninja docs-llvm-html  docs-llvm-man</userinput></screen>

    <para>
      Clang dokumentasjonen kan også bygges:
    </para>

<screen remap="doc"><userinput>ninja docs-clang-html docs-clang-man</userinput></screen>

    <!-- The excessive core dump made my system irresponsive.  -->
    <para>
      LLVM testpakken kan produsere mange kjernedumpfiler. De vil okkupere
      en stor mengde diskplass, og kjernedumpprosessen kan
      reduserer testingen betydelig. For å teste resultatene med
      kjernedump deaktivert, <phrase revision='systemd'>sikre
      <xref linkend='systemd'/> er ombygd med
      <xref linkend='linux-pam'/> støtte og gjeldende påloggingsøkt er
      startet etter oppdatering av
      <filename>/etc/pam.d/system-session</filename> filen til å inkludere
      <filename class='libraryfile'>pam_systemd.so</filename>,
      deretter </phrase>utsted:
    </para>

    <screen remap="test" revision="sysv"><userinput>sh -c 'ulimit -c 0 &amp;&amp; ninja check-all'</userinput></screen>

    <!-- From core(5): "RLIMIT_CORE will be ignored if the system is
         configured to pipe core dumps to a program".  Here "the program"
         is systemd-coredumpd.  So we need some fancy systemd setting.
         -&ndash;user: Run it under per-user systemd manager, avoiding
                       the necessity of root priviledge.
         -&nash;pty: Run it in a pseudo-terminal, so we can monitor the
                     process or interrupt it with Ctrl-C if we want.
         -d: Run it with $PWD as the working directory.
         -G: Delete the transient service unit even if the command fails,
             to prevent "systemctl -&ndash;user status" from reporting
             "degraded".
         -p LimitCORE=0: Disable core dump.
    -->

<screen remap="test" revision="systemd"><userinput>systemctl   --user start dbus &amp;&amp;
systemd-run --user --pty -d -G -p LimitCORE=0 ninja check-all</userinput></screen>

    <para>
      <!-- EDITORS - if you have more than 4 cores, take some offline to measure
      the elapsed time for the tests.  Also, libstdc++.a and perhaps libstdc++fs.a
      are used by a couple of the link-static tests. -->
      Tester er
      bygget med alle <emphasis>tilgjengelige</emphasis> kjerner, men kjører med antall
      <emphasis>tilkoblete</emphasis> prosessorer. (Forskjellen er at tilgjengelig
      kjerner kan begrenses ved å bruke <command>taskset</command>, men å ta dem frakoblet
      krever ekko 0 til <filename
      class="directory">/sys/devices/system/cpu/cpu&lt;N&gt;/online</filename>
      av <systemitem class="username">root</systemitem> bruker og gjør dem
      midlertidig ubrukelig av alle jobber på maskinen.) Én test navngitt
      <filename>Linux/clone_setns.cpp</filename> vil mislykkes hvis
      <option>CONFIG_USER_NS</option> ikke er aktivert i
      kjernekonfigurasjonen.
      <!-- https://github.com/llvm/llvm-project/issues/64388 -->
      The tests named <filename>AtoiAndFriendsOOBTest</filename>,
      <filename>StrtolOOBTest</filename>,
      <filename>StrtollOOBTest</filename>,
      <filename>interception_malloc_test.cpp</filename>, og
      <filename>scanf-allocate.cpp</filename> er kjent for å mislykkes med
      Glibc-2.38.
      <!-- 16.0.3: 67327 Passed, 23510 Unsupported, 85 Skipped,
                   124 Expectedly Failed
           16.0.4  67327 Passed, 23507 Unsupported, 85 Skipped,
                   124 Expectedly Failed, 6 Failed
           Failed Tests (6):
           AddressSanitizer-x86_64-linux         :: TestCases/log-path_test.cpp
           AddressSanitizer-x86_64-linux-dynamic :: TestCases/log-path_test.cpp
           MemProfiler-x86_64-linux              :: TestCases/log_path_test.cpp
           MemProfiler-x86_64-linux-dynamic      :: TestCases/log_path_test.cpp
           LLVM                   :: tools/llvm-libtool-darwin/L-and-l.test
           ThreadSanitizer-x86_64 :: Linux/clone_setns.cpp

           16.0.5 had the same test failures as 16.0.4.  - bdubbs

           16.0.5 in LFS r11.3-141 with a minimal kernel configuration:
           67330 Passed, 23512 Unsupported, 85 Skipped,
           124 Expectedly Failed, 1 Failed
           FAIL: ThreadSanitizer-x86_64 :: Linux/clone_setns.cpp - xry111

           16.0.5 with Glibc-2.38:
           63716 Passed, 23512 Unsupported, 85 Skipped,
           124 Expectedly Failed, 15 Failed

           - AtoiAndFriendsOOBTest, StrtolOOBTest, StrtollOOBTest
             (repeated 4 times with different configurations)
           - interception_malloc_test.cpp (repeated 2 times)
           - scanf-allocate.cpp
      -->

      <!-- To editors: it seems there is a more thorough test suite named
           "test-suite-16.0.0.src.tar.xz" on the GitHub release download
           page.  The usage of it is on
           https://llvm.org/docs/TestSuiteGuide.html.  It looks like we've
           never mentioned it in BLFS.

           Let's let it go.  llvm is complex enough as it is.  Adding
           the additional testsuite is IMO overkill.  - bdubbs -->
    </para>

    <para>
      Nå, som &root; bruker:
    </para>

<screen role="root"><userinput>ninja install &amp;&amp;
cp bin/FileCheck /usr/bin</userinput></screen>
<!-- as of version 13.0.0, the install process seems to install the html
     documentation and the manual pages. The llvm html documentation
     is installed into /usr/share/doc/LLVM/llvm, while the clang html
     documentation is installed into /usr/share/doc/LLVM/clang. So we have
     just to move it. -->
    <para>
      Hvis du har bygget llvm dokumentasjonen, er den installert
      med kommandoen ovenfor, men den må flyttes. Som
      <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"
        remap="doc"><userinput>install -v -d -m755 /usr/share/doc/llvm-&llvm-version;            &amp;&amp;
mv -v /usr/share/doc/LLVM/llvm /usr/share/doc/llvm-&llvm-version; &amp;&amp;
rmdir -v --ignore-fail-on-non-empty /usr/share/doc/LLVM</userinput></screen>

    <para>
      Hvis du har bygget clang dokumentasjonen, er den installert, men
      må flyttes også. Igjen som
      <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"
        remap="doc"><userinput>install -v -d -m755 /usr/share/doc/llvm-&llvm-version;             &amp;&amp;
mv -v /usr/share/doc/LLVM/clang /usr/share/doc/llvm-&llvm-version; &amp;&amp;
rmdir -v --ignore-fail-on-non-empty /usr/share/doc/LLVM</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Parameterforklaringer</title>

    <para>
      <parameter>-DLLVM_ENABLE_FFI=ON</parameter>: Denne bryteren tillater
      <application>LLVM</application> å bruke
      <application>libffi</application>.
    </para>

    <para>
      <parameter>-DLLVM_BUILD_LLVM_DYLIB=ON</parameter>: Denne bryteren bygger
      bibliotekene som statiske og kobler dem alle sammen til en unik delt.
      Dette er den anbefalte måten å bygge et delt bibliotek på.
    </para>

    <para>
      <parameter>-DCMAKE_BUILD_TYPE=Release</parameter>: Denne bryteren aktiverer
      kompilatoroptimaliseringer for å øke hastigheten på koden og redusere størrelsen.
      Den deaktiverer også noen kompileringskontroller som ikke er nødvendige på en
      produksjonssystem.
    </para>

    <para>
      <parameter>-DLLVM_TARGETS_TO_BUILD="host;AMDGPU;BPF"</parameter>: Denne
      bryteren gjør det mulig å bygge for samme mål som verten, og også for
      r600 AMD GPU som brukes av Mesa r600 og radeonsi drivere. BPF
      målet er nødvendig for å bygge <xref linkend="v4l-utils"/>. Standard er
      alle målene. Du kan bruke en semikolonseparert liste. Gyldige mål
      er: host, X86, Sparc, PowerPC, ARM, AArch64, Mips, Hexagon, Xcore,
      M68K, MSP430, NVPTX, SystemZ, AMDGPU, BPF, CppBackend eller alle.
    </para>

    <para>
      <parameter>-DLLVM_LINK_LLVM_DYLIB=ON</parameter>: Brukes sammen med
      <parameter>-DLLVM_BUILD_LLVM_DYLIB=ON</parameter>, denne bryteren aktiverer
      kobling av verktøyene mot det delte biblioteket i stedet for de statiske.
      Det reduserer størrelsen litt og sikrer også at llvm-config
      vil bruke libLLVM-&llvm-maj-version;.so. riktig.
    </para>

    <para>
      <parameter>-DLLVM_ENABLE_RTTI=ON</parameter>: Denne bryteren brukes til
      å bygge LLVM med informasjon om kjøretidstype. Dette er nødvendig for å bygge
      <xref linkend="mesa"/>.
    </para>

    <para>
      <parameter>-DLLVM_BINUTILS_INCDIR=/usr/include</parameter>: Denne bryteren
      brukes til å fortelle byggesystemet plasseringen av binutils deklarasjoner,
      som ble installert i LFS. Dette tillater bygging av
      <filename class="libraryfile">LLVMgold.so</filename>, som trengs
      for å bygge programmer med <command>clang</command> og Link Time
      Optimization (LTO).
    </para>

    <para>
      <parameter>-DLLVM_INCLUDE_BENCHMARKS=OFF</parameter>:
      brukes til å deaktivere generasjonsbyggmål for LLVM
      benchmarks. Dette alternativet krever tilleggskode som
      ikke er tilgjengelig for øyeblikket.
    </para>

    <para>
      <parameter>-DCLANG_DEFAULT_PIE_ON_LINUX=ON</parameter>: gjør
      <option>-fpie</option> alternativet standard når du kompilerer programmer.
      Sammen med <xref linkend="gASLR"/> funksjonen aktivert i kjernen,
      dette beseirer en slags angrep basert på kjente minneoppsett.
    </para>

    <para>
      <option>-DBUILD_SHARED_LIBS=ON</option>: hvis brukt i stedet for
      <parameter>-DLLVM_BUILD_LLVM_DYLIB=ON</parameter> og
      <parameter>-DLLVM_LINK_LLVM_DYLIB=ON</parameter>, bygger alle
      <application>LLVM</application> biblioteker (ca. 60) som delte
      biblioteker i stedet for statiske.
    </para>

    <para>
      <option>-DLLVM_ENABLE_DOXYGEN</option>: Gjør det mulig å generere
      søkbar HTML dokumentasjon hvis du har installert <xref
      linkend="doxygen"/>. Du bør kjøre <command>make doxygen-html</command>
      etterpå, og installer den genererte dokumentasjonen manuelt.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Innhold</title>

    <segmentedlist>
      <segtitle>Installerte Programmer</segtitle>
      <segtitle>Installerte Biblioteker</segtitle>
      <segtitle>Installerte Mapper</segtitle>

      <seglistitem>
        <seg>
          amdgpu-arch,
          analyze-build, bugpoint, c-index-test, clang, clang++ (symlinks to
          clang-&llvm-maj-version;), clang-&llvm-maj-version;, clang-check, clang-cl,
          clang-cpp (to siste symbolkoblinger til clang), clang-extdef-mapping, clang-format,
          clang-linker-wrapper,
          clang-offload-bundler, clang-offload-packager,
          clang-refactor, clang-rename, clang-repl, clang-scan-deps,
          diagtool, dsymutil, FileCheck, git-clang-format, hmaptool, intercept-build, llc, lli,
          llvm-addr2line (symbolkobling til llvm-symbolizer),
          llvm-ar, llvm-as, llvm-bcanalyzer,
          llvm-bitcode-strip (symbolkobling til llvm-objcopy), llvm-cat,
          llvm-cfi-verify, llvm-config, llvm-cov, llvm-c-test, llvm-cvtres,
          llvm-cxxdump, llvm-cxxfilt, llvm-cxxmap, llvm-debuginfo-analyzer,
          llvm-debuginfod, llvm-debuginfod-find,
          llvm-diff, llvm-dis, llvm-dlltool (symbolkobling til llvm-ar),
          llvm-dwarfdump, llvm-dwarfutil,
          llvm-dwp, llvm-exegesis, llvm-extract, llvm-gsymutil, llvm-ifs,
          llvm-install-name-tool (symbolkobling til llvm-objcopy), llvm-jitlink,
          llvm-lib (symbolkobling til llvm-ar), llvm-libtool-darwin, llvm-link,
          llvm-lipo, llvm-lto, llvm-lto2, llvm-mc, llvm-mca, llvm-ml,
          llvm-modextract, llvm-mt, llvm-nm, llvm-objcopy, llvm-objdump,
          llvm-opt-report, llvm-otool (symbolkobling til llv-objdump),
          llvm-pdbutil, llvm-profdata, llvm-profgen,
          llvm-ranlib (symbolkobling til llvm-ar), llvm-rc,
          llvm-readelf (symbolkobling til llvm-readobj), llvm-readobj, llvm-reduce,
          llvm-remark-size-diff, llvm-remarkutil,
          llvm-rtdyld, llvm-sim, llvm-size, llvm-split, llvm-stress,
          llvm-strings, llvm-strip (symbolkobling til llvm-objcopy), llvm-symbolizer,
          llvm-tapi-diff, llvm-tblgen, llvm-tli-checker, llvm-undname, llvm-windres (symbolkobling til
          llvm-rc), llvm-xray, nvptx-arch, opt, sancov, sanstats, scan-build,
          scan-build-py, scan-view, split-file, og verify-uselistorder
        </seg>
        <seg>
          libLLVM.so,
          libLLVM*.a (100 biblioteker),
          libLTO.so,
          libRemarks.so,
          libclang.so,
          libclang-cpp.so,
          libclang*.a (42 biblioteker),
          og LLVMgold.so
        </seg>
        <seg>
          /usr/include/{clang,clang-c,llvm,llvm-c},
          /usr/lib/{clang,cmake/{clang,llvm},libear,libscanbuild},
          /usr/share/{clang,opt-viewer,scan-build,scan-view}, og
          /usr/share/doc/llvm-&llvm-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte Beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="amdgpu-arch">
        <term><command>amdgpu-arch</command></term>
        <listitem>
          <para>
            viser AMD GPUer installert; ved kjøretid trenger den
            <filename class='libraryfile'>libhsa-runtime64.so</filename>
            som ikke er en del av BLFS
          </para>
          <indexterm zone="llvm amdgpu-arch">
            <primary sortas="b-amdgpu-arch">amdgpu-arch</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="analyze-build">
        <term><command>analyze-build</command></term>
        <listitem>
          <para>
            er et statisk analyseverktøy
          </para>
          <indexterm zone="llvm analyze-build">
            <primary sortas="b-analyze-build">analyze-build</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bugpoint">
        <term><command>bugpoint</command></term>
        <listitem>
          <para>
            er det automatiske reduksjonsverktøyet for testtilfeller
          </para>
          <indexterm zone="llvm bugpoint">
            <primary sortas="b-bugpoint">bugpoint</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="c-index-test">
        <term><command>c-index-test</command></term>
        <listitem>
          <para>
            brukes til å teste libclang API og demonstrere bruken
          </para>
          <indexterm zone="llvm c-index-test">
            <primary sortas="b-c-index-test">c-index-test</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang">
        <term><command>clang</command></term>
        <listitem>
          <para>
            er <application>Clang</application> C, C++,
            og Objective-C kompilator
          </para>
          <indexterm zone="llvm clang">
            <primary sortas="b-clang">clang</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-check">
        <term><command>clang-check</command></term>
        <listitem>
          <para>
            er et verktøy for å utføre statisk kodeanalyse og vise abstrakt
            syntaks trær (AST)
          </para>
          <indexterm zone="llvm clang-check">
            <primary sortas="b-clang-check">clang-check</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-extdef-mapping">
        <term><command>clang-extdef-mapping</command></term>
        <listitem>
          <para>
            er et verktøy for å samle USR navn og plasseringen til eksterne
            definisjoner i en kildefil
          </para>
          <indexterm zone="llvm clang-extdef-mapping">
            <primary sortas="b-clang-extdef-mapping">clang-extdef-mapping</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-format">
        <term><command>clang-format</command></term>
        <listitem>
          <para>
            er et verktøy for å formatere C/C++/Java/JavaScript/Objective-C/Protobuf
            kode
          </para>
          <indexterm zone="llvm clang-format">
            <primary sortas="b-clang-format">clang-format</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-linker-wrapper">
        <term><command>clang-linker-wrapper</command></term>
        <listitem>
          <para>
            er et innpakningsverktøy over vertslinkeren
          </para>
          <indexterm zone="llvm clang-linker-wrapper">
            <primary sortas="b-clang-linker-wrapper">clang-linker-wrapper</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-offload-bundler">
        <term><command>clang-offload-bundler</command></term>
        <listitem>
          <para>
            er et verktøy for å pakke/oppløse OpenMP avlastede filer knyttet til
            en vanlig kildefil
          </para>
          <indexterm zone="llvm clang-offload-bundler">
            <primary sortas="b-clang-offload-bundler">clang-offload-bundler</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-offload-packager">
        <term><command>clang-offload-packager</command></term>
        <listitem>
          <para>
            er et verktøy for å samle flere objektfiler til en enkelt binær,
            som deretter kan brukes til å lage en fatbinærholdig
            avlastningskode
          </para>
          <indexterm zone="llvm clang-offload-packager">
            <primary sortas="b-clang-offload-packager">clang-offload-packager</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-refactor">
        <term><command>clang-refactor</command></term>
        <listitem>
          <para>
            er et Clang basert refaktoriseringsverktøy for C, C++ og Objective-C
          </para>
          <indexterm zone="llvm clang-refactor">
            <primary sortas="b-clang-refactor">clang-refactor</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-rename">
        <term><command>clang-rename</command></term>
        <listitem>
          <para>
            er et verktøy for å gi nytt navn til symboler i C/C++ programmer
          </para>
          <indexterm zone="llvm clang-rename">
            <primary sortas="b-clang-rename">clang-rename</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clang-scan-deps">
        <term><command>clang-scan-deps</command></term>
        <listitem>
          <para>
            er et verktøy for å skanne etter avhengigheter i en kildefil
          </para>
          <indexterm zone="llvm clang-scan-deps">
            <primary sortas="b-clang-scan-deps">clang-scan-deps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="diagtool">
        <term><command>diagtool</command></term>
        <listitem>
          <para>
            er en kombinasjon av verktøy for å håndtere diagnostikk i clang
          </para>
          <indexterm zone="llvm diagtool">
            <primary sortas="b-diagtool">diagtool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="FileCheck">
        <term><command>FileCheck</command></term>
        <listitem>
          <para>
            er et verktøy som leser to filer (en fra standardinndata,
            og en spesifisert på kommandolinjen) og bruker den ene til å bekrefte den andre.
          </para>
          <indexterm zone="llvm FileCheck">
            <primary sortas="b-FileCheck">FileCheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dsymutil">
        <term><command>dsymutil</command></term>
        <listitem>
          <para>
            er et verktøy som brukes til å manipulere arkiverte DWARF feilsøkingssymbolfiler,
            kompatibel med Darwin kommandoen <command>dsymutil</command>
          </para>
          <indexterm zone="llvm dsymutil">
            <primary sortas="b-dsymutil">dsymutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="git-clang-format">
        <term><command>git-clang-format</command></term>
        <listitem>
          <para>
            kjører clang-format på git genererte oppdateringer (krever
            <xref linkend="git"/>)
          </para>
          <indexterm zone="llvm git-clang-format">
            <primary sortas="b-git-clang-format">git-clang-format</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hmaptool">
        <term><command>hmaptool</command></term>
        <listitem>
          <para>
            er et Python verktøy for å dumpe og konstruere deklarasjonskart
          </para>
          <indexterm zone="llvm hmaptool">
            <primary sortas="b-hmaptool">hmaptool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="intercept-build">
        <term><command>intercept-build</command></term>
        <listitem>
          <para>
            genererer en database med byggekommandoer for et prosjekt
          </para>
          <indexterm zone="llvm intercept-build">
            <primary sortas="b-intercept-build">intercept-build</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llc">
        <term><command>llc</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> statisk kompilator
          </para>
          <indexterm zone="llvm llc">
            <primary sortas="b-llc">llc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lli">
        <term><command>lli</command></term>
        <listitem>
          <para>
            brukes til å kjøre programmer direkte fra
            <application>LLVM</application> bitkode
          </para>
          <indexterm zone="llvm lli">
            <primary sortas="b-lli">lli</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-addr2line">
        <term><command>llvm-addr2line</command></term>
        <listitem>
          <para>
            er et verktøy som brukes til å konvertere adresser til filnavn og
            linjetall
          </para>
          <indexterm zone="llvm llvm-addr2line">
            <primary sortas="b-llvm-addr2line">llvm-addr2line</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-ar">
        <term><command>llvm-ar</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> arkiverer
          </para>
          <indexterm zone="llvm llvm-ar">
            <primary sortas="b-llvm-ar">llvm-ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-as">
        <term><command>llvm-as</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> assembler
          </para>
          <indexterm zone="llvm llvm-as">
            <primary sortas="b-llvm-as">llvm-as</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-bcanalyzer">
        <term><command>llvm-bcanalyzer</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> bitkode analysator
          </para>
          <indexterm zone="llvm llvm-bcanalyzer">
            <primary sortas="b-llvm-bcanalyzer">llvm-bcanalyzer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-bitcode-strip">
        <term><command>llvm-bitcode-strip</command></term>
        <listitem>
          <para>
            fjerner LLVM bitkode fra et objekt
          </para>
          <indexterm zone="llvm llvm-bitcode-strip">
            <primary sortas="b-llvm-bitcode-strip">llvm-bitcode-strip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cat">
        <term><command>llvm-cat</command></term>
        <listitem>
          <para>
            er et verktøy for å sette sammen llvm moduler
          </para>
          <indexterm zone="llvm llvm-cat">
            <primary sortas="b-llvm-cat">llvm-cat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cfi-verify">
        <term><command>llvm-cfi-verify</command></term>
        <listitem>
          <para>
            identifiserer om Control Flow Integrity beskytter alle indirekte
            kontrollflytinstruksjoner i den medfølgende objektfilen, DSO, eller
            binære
          </para>
          <indexterm zone="llvm llvm-cfi-verify">
            <primary sortas="b-llvm-cfi-verify">llvm-cfi-verify</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-config">
        <term><command>llvm-config</command></term>
        <listitem>
          <para>
            Printer <application>LLVM</application> kompileringsalternativer
          </para>
          <indexterm zone="llvm llvm-config">
            <primary sortas="b-llvm-config">llvm-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cov">
        <term><command>llvm-cov</command></term>
        <listitem>
          <para>
            brukes til å sende ut dekningsinformasjon
          </para>
          <indexterm zone="llvm llvm-cov">
            <primary sortas="b-llvm-cov">llvm-cov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-c-test">
        <term><command>llvm-c-test</command></term>
        <listitem>
          <para>
            er en bytecode disassembler
          </para>
          <indexterm zone="llvm llvm-c-test">
            <primary sortas="b-llvm-c-test">llvm-c-test</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cvtres">
        <term><command>llvm-cvtres</command></term>
        <listitem>
          <para>
            er et verktøy for å konvertere Microsoft ressursfiler til COFF
          </para>
          <indexterm zone="llvm llvm-cvtres">
            <primary sortas="b-llvm-cvtres">llvm-cvtres</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cxxdump">
        <term><command>llvm-cxxdump</command></term>
        <listitem>
          <para>
            brukes som en C++ ABI Data Dumper
          </para>
          <indexterm zone="llvm llvm-cxxdump">
            <primary sortas="b-llvm-cxxdump">llvm-cxxdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cxxfilt">
        <term><command>llvm-cxxfilt</command></term>
        <listitem>
          <para>
            brukes til å demangle C++ symboler i llvm kode
          </para>
          <indexterm zone="llvm llvm-cxxfilt">
            <primary sortas="b-llvm-cxxfilt">llvm-cxxfilt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-cxxmap">
        <term><command>llvm-cxxmap</command></term>
        <listitem>
          <para>
            brukes til å omforme C++ manglede symboler
          </para>
          <indexterm zone="llvm llvm-cxxmap">
            <primary sortas="b-llvm-cxxmap">llvm-cxxmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-debuginfo-analyzer">
        <term><command>llvm-debuginfo-analyzer</command></term>
        <listitem>
          <para>
            skriver ut en logisk representasjon av feilsøkingsinformasjon på lavt nivå
          </para>
          <indexterm zone="llvm llvm-debuginfo-analyzer">
            <primary sortas="b-llvm-debuginfo-analyzer">llvm-debuginfo-analyzer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-debuginfod">
        <term><command>llvm-debuginfod</command></term>
        <listitem>
          <para>
            er en tjeneste som gir feilsøkingsinformasjon over en HTTP API for
            å analysere strippede binære filer
          </para>
          <indexterm zone="llvm llvm-debuginfod">
            <primary sortas="b-llvm-debuginfod">llvm-debuginfod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-debuginfod-find">
        <term><command>llvm-debuginfod-find</command></term>
        <listitem>
          <para>
            er et grensesnitt til <command>llvm-debuginfod</command> nissen
            for å finne debuginfod artefakter
          </para>
          <indexterm zone="llvm llvm-debuginfod-find">
            <primary sortas="b-llvm-debuginfod-find">llvm-debuginfod-find</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-diff">
        <term><command>llvm-diff</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> strukturelle
            '<command>diff</command>'
          </para>
          <indexterm zone="llvm llvm-diff">
            <primary sortas="b-llvm-diff">llvm-diff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-dis">
        <term><command>llvm-dis</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> disassembler
          </para>
          <indexterm zone="llvm llvm-dis">
            <primary sortas="b-llvm-dis">llvm-dis</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-dwarfdump">
        <term><command>llvm-dwarfdump</command></term>
        <listitem>
          <para>
            skriver ut innholdet av DWARF seksjoner i objektfiler
          </para>
          <indexterm zone="llvm llvm-dwarfdump">
            <primary sortas="b-llvm-dwarfdump">llvm-dwarfdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-dwarfutil">
        <term><command>llvm-dwarfutil</command></term>
        <listitem>
          <para>
            er et verktøy for å kopiere og manipulere feilsøkingsinformasjon
          </para>
          <indexterm zone="llvm llvm-dwarfutil">
            <primary sortas="b-llvm-dwarfutil">llvm-dwarfutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-dwp">
        <term><command>llvm-dwp</command></term>
        <listitem>
          <para>
            slår sammen delte DWARF filer
          </para>
          <indexterm zone="llvm llvm-dwp">
            <primary sortas="b-llvm-dwp">llvm-dwp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-elfabi">
        <term><command>llvm-elfabi</command></term>
        <listitem>
          <para>
            brukes til å lese informasjon om en ELF binærs ABI
          </para>
          <indexterm zone="llvm llvm-elfabi">
            <primary sortas="b-llvm-elfabi">llvm-elfabi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-exegesis">
        <term><command>llvm-exegesis</command></term>
        <listitem>
          <para>
            er et benchmarking verktøy som bruker informasjon tilgjengelig i LLVM til
            å måle vertsmaskininstruksjonskarakteristikker som latens eller
            portnedbrytning
          </para>
          <indexterm zone="llvm llvm-exegesis">
            <primary sortas="b-llvm-exegesis">llvm-exegesis</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-extract">
        <term><command>llvm-extract</command></term>
        <listitem>
          <para>
            brukes til å trekke ut en funksjon fra en
            <application>LLVM</application> modul
          </para>
          <indexterm zone="llvm llvm-extract">
            <primary sortas="b-llvm-extract">llvm-extract</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-gsymutil">
        <term><command>llvm-gsymutil</command></term>
        <listitem>
          <para>
            brukes til å behandle GSYM Symbolication Format filer som
            konvertere minneadresser til funksjonsnavn og kildefillinje.
            Disse filene er mindre enn DWARF- eller Breakpad-filer
          </para>
          <indexterm zone="llvm llvm-gsymutil">
            <primary sortas="b-llvm-gsymutil">llvm-gsymutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-ifs">
        <term><command>llvm-ifs</command></term>
        <listitem>
          <para>
            brukes til å slå sammen grensesnittstubs med objektfiler
          </para>
          <indexterm zone="llvm llvm-ifs">
            <primary sortas="b-llvm-ifs">llvm-ifs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-install-name-tool">
        <term><command>llvm-install-name-tool</command></term>
        <listitem>
          <para>
            brukes til å omskrive lastekommandoer til MachO binært format
          </para>
          <indexterm zone="llvm llvm-install-name-tool">
            <primary sortas="b-llvm-install-name-tool">llvm-install-name-tool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-jitlink">
        <term><command>llvm-jitlink</command></term>
        <listitem>
          <para>
            brukes til å analysere flyttbare objektfiler for å lage innholdet
            kjørbar i en målprosess
          </para>
          <indexterm zone="llvm llvm-jitlink">
            <primary sortas="b-llvm-jitlink">llvm-jitlink</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-libtool-darwin">
        <term><command>llvm-libtool-darwin</command></term>
        <listitem>
          <para>
            gir grunnleggende libtool funksjonalitet på Darwin-baserte systemer.
            Dette er mest nyttig hvis du genererer binærfiler for macOS
            systemer
          </para>
          <indexterm zone="llvm llvm-libtool-darwin">
            <primary sortas="b-llvm-libtool-darwin">llvm-libtool-darwin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-link">
        <term><command>llvm-link</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> linker
          </para>
          <indexterm zone="llvm llvm-link">
            <primary sortas="b-llvm-link">llvm-link</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-lipo">
        <term><command>llvm-lipo</command></term>
        <listitem>
          <para>
            brukes til å lage universelle binærfiler fra MachO filer
          </para>
          <indexterm zone="llvm llvm-lipo">
            <primary sortas="b-llvm-lipo">llvm-lipo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-lto">
        <term><command>llvm-lto</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> LTO (link time optimization)
            linker
          </para>
          <indexterm zone="llvm llvm-lto">
            <primary sortas="b-llvm-lto">llvm-lto</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-lto2">
        <term><command>llvm-lto2</command></term>
        <listitem>
          <para>
            er en testpakke for det oppløsningsbaserte LTO grensesnittet
          </para>
          <indexterm zone="llvm llvm-lto2">
            <primary sortas="b-llvm-lto2">llvm-lto2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-mc">
        <term><command>llvm-mc</command></term>
        <listitem>
          <para>
            er en frittstående maskinkode assembler/disassembler
          </para>
          <indexterm zone="llvm llvm-mc">
            <primary sortas="b-llvm-mc">llvm-mc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-mca">
        <term><command>llvm-mca</command></term>
        <listitem>
          <para>
            er et ytelsesanalyseverktøy for statisk å måle
            ytelsen til maskinkoden
          </para>
          <indexterm zone="llvm llvm-mca">
            <primary sortas="b-llvm-mca">llvm-mca</primary>
          </indexterm>
        </listitem>
      </varlistentry>

<!--  <varlistentry id="llvm-mcmarkup">
        <term><command>llvm-mcmarkup</command></term>
        <listitem>
          <para>
            er en parser for maskinkodemarkering.
          </para>
          <indexterm zone="llvm llvm-mcmarkup">
            <primary sortas="b-llvm-mcmarkup">llvm-mcmarkup</primary>
          </indexterm>
        </listitem>
      </varlistentry>-->

      <varlistentry id="llvm-ml">
        <term><command>llvm-ml</command></term>
        <listitem>
          <para>
            er en lekeplass for maskinkode levert av LLVM
          </para>
          <indexterm zone="llvm llvm-ml">
            <primary sortas="b-llvm-ml">llvm-ml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-modextract">
        <term><command>llvm-modextract</command></term>
        <listitem>
          <para>
            er et verktøy for å trekke ut en modul fra flermodul bitkodefiler
          </para>
          <indexterm zone="llvm llvm-modextract">
            <primary sortas="b-llvm-modextract">llvm-modextract</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-mt">
        <term><command>llvm-mt</command></term>
        <listitem>
          <para>
            er et verktøy for å generere signerte filer og mapper fra en
            side-by-side monteringsmanifest (brukes for Microsoft SDK)
          </para>
          <indexterm zone="llvm llvm-mt">
            <primary sortas="b-llvm-mt">llvm-mt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-nm">
        <term><command>llvm-nm</command></term>
        <listitem>
          <para>
            brukes til å liste <application>LLVM</application> bitkode
            og objektfilens symboltabell
          </para>
          <indexterm zone="llvm llvm-nm">
            <primary sortas="b-llvm-nm">llvm-nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-objcopy">
        <term><command>llvm-objcopy</command></term>
        <listitem>
          <para>
            er LLVMs versjon av et objektfil verktøy
          </para>
          <indexterm zone="llvm llvm-objcopy">
            <primary sortas="b-llvm-objcopy">llvm-objcopy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-objdump">
        <term><command>llvm-objdump</command></term>
        <listitem>
          <para>
            er en <application>LLVM</application> objektfil dumper
          </para>
          <indexterm zone="llvm llvm-objdump">
            <primary sortas="b-llvm-objdump">llvm-objdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-opt-report">
        <term><command>llvm-opt-report</command></term>
        <listitem>
          <para>
            er et verktøy for å generere en optimaliseringsrapport fra YAML optimalisering
            opptaksfiler
          </para>
          <indexterm zone="llvm llvm-opt-report">
            <primary sortas="b-llvm-opt-report">llvm-opt-report</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-pdbutil">
        <term><command>llvm-pdbutil</command></term>
        <listitem>
          <para>
            er en PDB (Program Database) dumper. PDB er et Microsoft format
          </para>
          <indexterm zone="llvm llvm-pdbutil">
            <primary sortas="b-llvm-pdbutil">llvm-pdbutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-profdata">
        <term><command>llvm-profdata</command></term>
        <listitem>
          <para>
            er et lite verktøy for å manipulere og skrive ut profildatafiler
          </para>
          <indexterm zone="llvm llvm-profdata">
            <primary sortas="b-llvm-profdata">llvm-profdata</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-profgen">
        <term><command>llvm-profgen</command></term>
        <listitem>
          <para>
            genererer LLVM SPGO profileringsinformasjon
          </para>
          <indexterm zone="llvm llvm-profgen">
            <primary sortas="b-llvm-profgen">llvm-profgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-ranlib">
        <term><command>llvm-ranlib</command></term>
        <listitem>
          <para>
            brukes til å generere en indeks for et <application>LLVM</application>
            arkiv
          </para>
          <indexterm zone="llvm llvm-ranlib">
            <primary sortas="b-llvm-ranlib">llvm-ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-rc">
        <term><command>llvm-rc</command></term>
        <listitem>
          <para>
            er et plattformuavhengig verktøy for å kompilere ressursskript
            inn i binære ressursfiler
          </para>
          <indexterm zone="llvm llvm-rc">
            <primary sortas="b-llvm-rc">llvm-rc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-readobj">
        <term><command>llvm-readobj</command></term>
        <listitem>
          <para>
            viser formatspesifikk informasjon på lavt nivå om objektfiler
          </para>
          <indexterm zone="llvm llvm-readobj">
            <primary sortas="b-llvm-readobj">llvm-readobj</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-reduce">
        <term><command>llvm-reduce</command></term>
        <listitem>
          <para>
            brukes til å automatisk redusere testtilfeller
            når du kjører en testpakke
          </para>
          <indexterm zone="llvm llvm-reduce">
            <primary sortas="b-llvm-reduce">llvm-reduce</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-remark-size-diff">
        <term><command>llvm-remark-size-diff</command></term>
        <listitem>
          <para>
            rapporterer forskjellen i antall instruksjoner og stabelstørrelses
            merknader mellom to merknadsfiler
          </para>
          <indexterm zone="llvm llvm-remark-size-diff">
            <primary sortas="b-llvm-remark-size-diff">llvm-remark-size-diff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-remarkutil">
        <term><command>llvm-remarkutil</command></term>
        <listitem>
          <para>
            konverterer merknadsfiler mellom bitstrøm og YAML; eller skriver ut
            funksjonsinstruksjon telleinformasjon i merknadsfiler
          </para>
          <indexterm zone="llvm llvm-remark-size-diff">
            <primary sortas="b-llvm-remark-size-diff">llvm-remark-size-diff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-rtdyld">
        <term><command>llvm-rtdyld</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> MC-JIT verktøy
          </para>
          <indexterm zone="llvm llvm-rtdyld">
            <primary sortas="b-llvm-rtdyld">llvm-rtdyld</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-size">
        <term><command>llvm-size</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> objektstørrelse dumper
          </para>
          <indexterm zone="llvm llvm-size">
            <primary sortas="b-llvm-size">llvm-size</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-split">
        <term><command>llvm-split</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> modul splitter
          </para>
          <indexterm zone="llvm llvm-split">
            <primary sortas="b-llvm-split">llvm-split</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-stress">
        <term><command>llvm-stress</command></term>
        <listitem>
          <para>
            brukes til å generere tilfeldige
            <filename class="extension">.ll</filename> filer
          </para>
          <indexterm zone="llvm llvm-stress">
            <primary sortas="b-llvm-stress">llvm-stress</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-strings">
        <term><command>llvm-strings</command></term>
        <listitem>
          <para>
            skrive ut strenger funnet i en binær (objektfil, kjørbar eller
            arkivbibliotek)
          </para>
          <indexterm zone="llvm llvm-strings">
            <primary sortas="b-llvm-strings">llvm-strings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-symbolizer">
        <term><command>llvm-symbolizer</command></term>
        <listitem>
          <para>
            konverterer adresser til kildekodeplasseringer
          </para>
          <indexterm zone="llvm llvm-symbolizer">
            <primary sortas="b-llvm-symbolizer">llvm-symbolizer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-tblgen">
        <term><command>llvm-tblgen</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> Target Description
            To C++ Code Generator
          </para>
          <indexterm zone="llvm llvm-tblgen">
            <primary sortas="b-llvm-tblgen">llvm-tblgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-tli-checker">
        <term><command>llvm-tli-checker</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> TargetLibraryInfo
            kontra SDK kontroll
          </para>
          <indexterm zone="llvm llvm-tli-checker">
            <primary sortas="b-llvm-tli-checker">llvm-tli-checker</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-undname">
        <term><command>llvm-undname</command></term>
        <listitem>
          <para>
            er et verktøy for å demangle navn
          </para>
          <indexterm zone="llvm llvm-undname">
            <primary sortas="b-llvm-undname">llvm-undname</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="llvm-xray">
        <term><command>llvm-xray</command></term>
        <listitem>
          <para>
            er en implementering av Googles XRay funksjonsanropssporingssystem
          </para>
          <indexterm zone="llvm llvm-xray">
            <primary sortas="b-llvm-xray">llvm-xray</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvptx-arch">
        <term><command>nvptx-arch</command></term>
        <listitem>
          <para>
            viser NVIDIA GPUer installert; ved kjøretid trenger den
            <filename class='libraryfile'>libcuda.so</filename>
            som ikke er en del av BLFS
          </para>
          <indexterm zone="llvm nvptx-arch">
            <primary sortas="b-nvptx-arch">nvptx-arch</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="opt">
        <term><command>opt</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> optimizer
          </para>
          <indexterm zone="llvm opt">
            <primary sortas="b-opt">opt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sancov">
        <term><command>sancov</command></term>
        <listitem>
          <para>
            er behandlingsverktøyet for rensedekning
          </para>
          <indexterm zone="llvm sancov">
            <primary sortas="b-sancov">sancov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sanstats">
        <term><command>sanstats</command></term>
        <listitem>
          <para>
            er behandlingsverktøyet for rensestatistikk
          </para>
          <indexterm zone="llvm sanstats">
            <primary sortas="b-sanstats">sanstats</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scan-build">
        <term><command>scan-build</command></term>
        <listitem>
          <para>
            er <application>Perl</application> skript som påkaller
            <application>Clang</application> statiske analysator
          </para>
          <indexterm zone="llvm scan-build">
            <primary sortas="b-scan-build">scan-build</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scan-build-py">
        <term><command>scan-build-py</command></term>
        <listitem>
          <para>
            er <application>Python</application> skript som påkaller
            <application>Clang</application> statiske analysator
          </para>
          <indexterm zone="llvm scan-build-py">
            <primary sortas="b-scan-build-py">scan-build-py</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scan-view">
        <term><command>scan-view</command></term>
        <listitem>
          <para>
            er en viser for <application>Clang</application> statiske analysator
            resultater
          </para>
          <indexterm zone="llvm scan-view">
            <primary sortas="b-scan-view">scan-view</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="split-file">
        <term><command>split-file</command></term>
        <listitem>
          <para>
            deler en inndatafil i flere deler atskilt med regulært uttrykk
          </para>
          <indexterm zone="llvm split-file">
            <primary sortas="b-split-file">split-file</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="verify-uselistorder">
        <term><command>verify-uselistorder</command></term>
        <listitem>
          <para>
            er <application>LLVM</application> verktøy for å bekrefte brukslistens
            rekkefølge
          </para>
          <indexterm zone="llvm verify-uselistorder">
            <primary sortas="b-verify-uselistorder">verify-uselistorder</primary>
          </indexterm>
        </listitem>
      </varlistentry>

<!-- Removed in 12.0.0
      <varlistentry id="yaml2obj">
        <term><command>yaml2obj</command></term>
        <listitem>
          <para>
            tar en YAML representasjon av en objektfil og konverterer den
             til en binær fil
          </para>
          <indexterm zone="llvm yaml2obj">
            <primary sortas="b-yaml2obj">yaml2obj</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
<!--
      <varlistentry id="libllvm">
        <term><filename class="libraryfile">libLLVM-&llvm-version;.so</filename></term>
        <listitem>
          <para>
            inneholder <application>LLVM</application> API funksjoner.
          </para>
          <indexterm zone="llvm libllvm">
            <primary sortas="c-libllvm">libLLVM-&llvm-version;.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libprofile_rt">
        <term><filename class="libraryfile">libprofile_rt.so</filename></term>
        <listitem>
          <para>
            er C, C++ and Objective-C kjøretidsbibliotek for
            <application>Clang</application>.
          </para>
          <indexterm zone="llvm libprofile_rt">
            <primary sortas="c-libprofile_rt">libprofile_rt.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>-->

    </variablelist>

  </sect2>

</sect1>
