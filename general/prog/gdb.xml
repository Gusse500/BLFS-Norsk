<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY gdb-download-http "&gnu-http;/gdb/gdb-&gdb-version;.tar.xz">
  <!ENTITY gdb-download-ftp  " ">
  <!ENTITY gdb-md5sum        "f7a7e2d0a6d28622ac69a3623b23876b">
  <!ENTITY gdb-size          "23 MB">
  <!ENTITY gdb-buildsize     "853 MB (legg til 825 MB for dokumenter; legg til 860 MB for tester)">
  <!ENTITY gdb-time          "1.1 SBU (legg til 1.0 SBU for dokumenter; legg til 3.5 SBU tester; alle bruker parallellisme=8)">
]>

<sect1 id="gdb" xreflabel="GDB-&gdb-version;">
  <?dbhtml filename="gdb.html"?>


  <title>GDB-&gdb-version;</title>

  <indexterm zone="gdb">
    <primary sortas="a-GDB">GDB</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduksjon til GDB</title>

    <para>
      <application>GDB</application>, GNU Project debugger, lar deg
      se hva som skjer <quote>på innsiden</quote> i et annet program mens det
      kjører -- eller hva et annet program gjorde i det øyeblikket det krasjet.
      Merk at <application>GDB</application> er mest effektiv ved sporing av
      programmer og biblioteker som ble bygget med feilsøkingssymboler og ikke
      er strippet.
    </para>

    &lfs123_checked;

    <bridgehead renderas="sect3">Pakkeinformasjon</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting (HTTP): <ulink url="&gdb-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting (FTP): <ulink url="&gdb-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &gdb-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &gdb-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert diskplass som kreves: &gdb-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert byggetid: &gdb-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">GDB Avhengigheter</bridgehead>

    <bridgehead renderas="sect4">Anbefalt kjøretidsavhengighet</bridgehead>
    <para role="recommended">
      <xref linkend="six"/> (Python 3 modul, kreves ved kjøring for
      å bruke GDB skript fra ulike LFS/BLFS pakker med Python 3
      installert i LFS)
    </para>

    <bridgehead renderas="sect4">Valgfri</bridgehead>
    <para role="optional">
      <xref linkend="doxygen"/>,
      <xref linkend="gcc"/> (ada, gfortran, og go er brukt for tester),
      <xref linkend="guile"/>,
      <xref linkend="rust"/> (brukt for noen tester),
      <xref linkend="valgrind"/>, og
      <ulink url="https://sourceware.org/systemtap/">SystemTap</ulink>
      (kjøretid, brukt til tester)
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installasjon av GDB</title>

    <para>
      Installer <application>GDB</application> ved å kjøre følgende
      kommandoer:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

../configure --prefix=/usr          \
             --with-system-readline \
             --with-python=/usr/bin/python3 &amp;&amp;
make</userinput></screen>

    <para>
      Eventuelt for å bygge API dokumentasjonen ved hjelp av
      <xref linkend="doxygen"/>, kjør:
    </para>

<screen remap="doc"><userinput>make -C gdb/doc doxy</userinput></screen>

    <para>
      Det anbefales ikke å kjøre testene. Resultatene varierer mye avhengig av
      systemarkitekturen og hvilke valgfrie avhengigheter som er installert
      og hvilken versjon av gcc som brukes. På ett testet system var det
      140 uventede feil (av over 108 000 tester) og på et annet system
      var det "bare" 14 uventede feil. Tiden for å kjøre testene
      varierer fra ca. 3 SBU til over 15 SBU ved bruk av -j8. Dette avhenger
      av antall tester som får tidsavbrudd og andre faktorer.
    </para>

    <tip>
      <para>
         Med en vanlig <command>make check</command>, er det mange advarsel
         meldinger om en manglende global konfigurasjonsfil. Disse kan 
         unngås ved å kjøre <command>touch global.exp</command> og forberede
         <command>make check</command> kommandoen med
         <command>DEJAGNU=$PWD/global.exp</command>.  I tillegg kan testene
         bruke mindre tid betraktelig ved å bruke <command>make</command> valget
         "-j&lt;N&gt;" hvor &lt;N&gt; er antall kjerner på systemet ditt.
         Noen ganger kan bruk av parallellitet imidlertid føre til merkelige feil.
      </para>
    </tip>

    <para>
      For å teste resultatene uansett, utsted:
    </para>

<screen remap="test"><userinput>pushd gdb/testsuite &amp;&amp;
make  site.exp      &amp;&amp;
echo  "set gdb_test_timeout 30" &gt;&gt; site.exp &amp;&amp;
make check 2&gt;1 | tee gdb-check.log
popd</userinput></screen>

    <para>
      Se <emphasis>gdb/testsuite/README</emphasis> og <ulink
      url="https://sourceware.org/gdb/wiki/TestingGDB">TestingGDB</ulink>.
      Det er mange ytterligere problemer med testpakken:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          Rene mapper er nødvendig hvis du kjører testene på nytt. For den
          grunnen, lag en kopi av den kompilerte kildekodemappen
          før testene i tilfelle du må kjøre testene på nytt.
        </para>
      </listitem>

      <listitem>
        <para>
          Resultatene kan også avhenge av installert kompilatorer.
        </para>
      </listitem>

<!-- for gdb-11.1, gcc-11.2 - pierre
          A test run of the test suite had about 1700 unexpected failures
          (out of over 80000 tests). Over 1370 of the failures were related
          to FORTRAN tests. -->
<!-- for gdb-12.1, gcc-11.3.0 - bdubbs
          A test run of the test suite had a little over 200 unexpected failures
          out of over 94000 tests.-->
<!-- for gdb-13.0, gcc-12.2.0 - bdubbs
          A test run of the test suite had 33 unexpected failures
          out of over 106000 tests. -->
<!-- for gdb-13.2, gcc-13.1.0 - pierre
          A test run of the test suite had 183 unexpected failures
          out of over 105000 tests. -->
<!-- for gdb-14.1, gcc 13.2.0 - rahul -->
<!--      A test run of the test suite had 51 unexpected failures
          out of the over 106000 tests.-->
<!-- for gdb-16.1, gcc-14.2.0 - renodr -->
<!--      A test run of the test suite had 14 unexpected failures out of over
          120,000 tests.-->
<!-- for gdb-16.2, gcc-14.2.0 - renodr -->
<!--      A test run of the test suite had 14 unexpected failures out of over
          120,000 tests.-->
<!-- for gdb-16.3, gcc-14.2.0 - bdubbs -->
<!--      A test run of the test suite had 157 unexpected failures out of over
          122,000 tests.-->

      <listitem>
        <para>
          På noen AMD baserte systemer, over 200 ekstra tester
          kan mislykkes på grunn av en forskjell i trådimplementeringen
          på disse CPUene.
        </para>
      </listitem>

      <listitem>
        <para>
          For gdb-16.1, ved bruk av en Xeon E5-1650 v3, var det 14 uventede feil
          av over 120000  tester.
        </para>
      </listitem>

      <listitem>
        <para>
          Fire tester i <filename>gdb.base/step-over-syscall.exp</filename>
          pakken er kjent for å mislykkes på grunn av endringer i Linux 6.13 og glibc-2.41.
        </para>
      </listitem>
    </itemizedlist>

    <para>
      Nå, som <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"><userinput>make -C gdb install &amp;&amp;
make -C gdbserver install</userinput></screen>

    <para>
      Hvis du har bygget API dokumentasjonen, er den nå i gdb/doc/doxy.
      Du kan installere den (som <systemitem class="username">root</systemitem>
      bruker):
    </para>

<screen role="root"
        remap="doc"><userinput>install -d /usr/share/doc/gdb-&gdb-version; &amp;&amp;
rm -rf gdb/doc/doxy/xml &amp;&amp;
cp -Rv gdb/doc/doxy /usr/share/doc/gdb-&gdb-version;</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Parameterforklaringer</title>

    <para>
      <parameter>--with-system-readline</parameter>: Denne bryteren tvinger
      <application>GDB</application> å bruke kopien av
      <application>Readline</application> installert i LFS.
    </para>

    <para>
      <parameter>--with-python=/usr/bin/python3</parameter>: Denne bryteren
      tvinger <application>GDB</application> å bruke Python 3.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Innhold</title>

    <segmentedlist>
      <segtitle>Installerte Programmer</segtitle>
      <segtitle>Installert Bibliotek</segtitle>
      <segtitle>Installerte Mapper</segtitle>

      <seglistitem>
        <seg>
          gcore, gdb, gdbserver, gdb-add-index, og gstack
        </seg>
        <seg>
          libinproctrace.so
        </seg>
        <seg>
          /usr/{include,share}/gdb and /usr/share/doc/gdb-&gdb-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte Beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="gcore">
        <term><command>gcore</command></term>
        <listitem>
          <para>
            genererer en kjernedump av et program som kjører
          </para>
          <indexterm zone="gdb gcore">
            <primary sortas="b-gcore">gcore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gdb-prog">
        <term><command>gdb</command></term>
        <listitem>
          <para>
            er GNU Debugger
          </para>
          <indexterm zone="gdb gdb-prog">
            <primary sortas="b-gdb-prog">gdb-prog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gdbserver">
        <term><command>gdbserver</command></term>
        <listitem>
          <para>
            er en ekstern server for GNU debugger (den tillater programmer
            å feilsøkes fra en annen maskin)
          </para>
          <indexterm zone="gdb gdbserver">
            <primary sortas="b-gdbserver">gdbserver</primary>
          </indexterm>
        </listitem>
      </varlistentry>

     <varlistentry id="gdb-add-index">
        <term><command>gdb-add-index</command></term>
        <listitem>
          <para>
            Tillater å legge til indeksfiler til ELF binærfiler. Dette setter fart på
            <command>gdb</command> starting av store programmer.
          </para>
          <indexterm zone="gdb gdb-add-index">
            <primary sortas="b-gdb-add-index">gdb-add-index</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gstack">
        <term><command>gstack</command></term>
        <listitem>
          <para>
            skriver ut en stabelsporing fra et program som kjører for øyeblikket
          </para>
          <indexterm zone="gdb gstack">
            <primary sortas="b-gstack">gstack</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libinproctrace">
        <term><filename class="libraryfile">libinproctrace.so</filename></term>
        <listitem>
          <para>
            inneholder funksjoner for sporingsmiddelet i prosessen. Agenten
            gjør det mulig å installere raske sporingspunkter, og viser statiske sporpunkter
            markører, sondering av statiske sporingsmarkører og startsporing
            overvåkning.
          </para>
          <indexterm zone="gdb libinproctrace">
            <primary sortas="c-libinproctrace">libinproctrace.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
 
    </variablelist>

  </sect2>

</sect1>
