<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY harfbuzz-download-http
           "https://github.com/harfbuzz/harfbuzz/releases/download/&harfbuzz-version;/harfbuzz-&harfbuzz-version;.tar.xz">
  <!ENTITY harfbuzz-download-ftp  " ">
  <!ENTITY harfbuzz-md5sum        "5c7a6750760e4d6c098436a43542a7d0">
  <!ENTITY harfbuzz-size          "18 MB">
  <!ENTITY harfbuzz-buildsize     "144 MB (with tests)">
  <!ENTITY harfbuzz-time          "0.6 SBU (Using parallelism=4; with tests)">
]>

<sect1 id="harfbuzz" xreflabel="HarfBuzz-&harfbuzz-version;">
  <?dbhtml filename="harfbuzz.html"?>


  <title>HarfBuzz-&harfbuzz-version;</title>

  <indexterm zone="harfbuzz">
    <primary sortas="a-HarfBuzz">HarfBuzz</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Harfbuzz</title>

    <para>
      The <application>HarfBuzz</application> package contains an OpenType text
      shaping engine.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&harfbuzz-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&harfbuzz-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &harfbuzz-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &harfbuzz-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &harfbuzz-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &harfbuzz-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">HarfBuzz Dependencies</bridgehead>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="gobject-introspection"/> (required if building GNOME),
      <xref linkend="glib2"/> (required for Pango),
      <xref role="first" linkend="graphite2"/> (required for building
        <xref role="nodep" linkend="texlive"/> or
        <xref role="nodep" linkend="libreoffice"/> with system harfbuzz),
      <xref linkend="icu"/>, and
      <xref role="first" linkend="freetype2"/>
      (after <xref role="nodep" linkend="harfbuzz"/> is installed, reinstall
      <xref role="nodep" linkend="freetype2"/>)
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="cairo"/> (circular: build cairo and all its recommended
      dependencies, including harfbuzz, first, then rebuild harfbuzz if the
      cairo backend is needed),
      <xref linkend="git"/>,
      <xref linkend="gtk-doc"/>,
      <ulink url="https://pypi.org/project/FontTools/">FontTools</ulink>
      (Python 3 module, for the test suite), and
      <ulink url="https://www.colm.net/open-source/ragel/">ragel</ulink>
    </para>

    <warning>
      <para>
        Recommended dependencies are not strictly required to build
        the package. However, you might not get expected results at
        runtime if you don't install them. Please do not report bugs
        with this package if you <emphasis>have not</emphasis>
        installed the recommended dependencies.
      </para>
    </warning>

    <para condition="html" role="usernotes">
      User Notes: <ulink url="&blfs-wiki;/harfbuzz"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of HarfBuzz</title>

    <para>
      Install <application>HarfBuzz</application> by running the following
      commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson --prefix=/usr        \
      --buildtype=release  \
      -Dgraphite2=enabled  &amp;&amp;
ninja</userinput></screen>

    <para>
      To test the results, issue: <command>ninja test</command>.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>
  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/meson-buildtype-release.xml"/>

    <para>
      <parameter>-Dgraphite2=enabled</parameter>: This switch enables
      <application>Graphite2</application> support, which is required for
      building <xref linkend="texlive"/> or <xref linkend="libreoffice"/>
      with system harfbuzz.
    </para>
<!--
    <para>
      <parameter>-Dbenchmark=disabled</parameter>: This switch disables
      downloading and building the <application>google-benchmark</application>
      subproject, which requires <xref linkend="git"/>, and is of no
      use for non developers.
    </para>
-->
    <para>
      <option>-Ddocs=disabled</option>: If <xref linkend="gtk-doc"/> is
      installed, the documentation is built and installed. This switch
      prevents that.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          hb-info,
          hb-ot-shape-closure,
          hb-shape,
          hb-subset, and
          hb-view (only if Cairo is installed)
        </seg>
        <seg>
          libharfbuzz.so,
          libharfbuzz-cairo.so (only if Cairo is installed),
          libharfbuzz-gobject.so,
          libharfbuzz-icu.so, and
          libharfbuzz-subset.so
        </seg>
        <seg>
          /usr/include/harbuzz,
          /usr/lib/cmake/harfbuzz, and
          /usr/share/gtk-doc/html/harfbuzz (optional)
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

     <varlistentry id="hb-info">
       <term><command>hb-info</command></term>
       <listitem>
         <para>
           is used for gathering information about fonts installed on the
           system
         </para>
         <indexterm zone="harfbuzz hb-info">
           <primary sortas="b-hb-info">hb-info</primary>
         </indexterm>
       </listitem>
     </varlistentry>

     <varlistentry id="hb-ot-shape-closure">
        <term><command>hb-ot-shape-closure</command></term>
        <listitem>
          <para>
            gives the set of characters contained in a string, represented as
            single characters and/or single character names. Example:
            <command>hb-ot-shape-closure
              /usr/share/fonts/dejavu/DejaVuSans.ttf "Hello World."</command>
          </para>
          <indexterm zone="harfbuzz hb-ot-shape-closure">
            <primary sortas="b-hb-ot-shape-closure">hb-ot-shape-closure</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hb-shape">
        <term><command>hb-shape</command></term>
        <listitem>
          <para>
            is used for the conversion of text strings into positioned glyphs
          </para>
          <indexterm zone="harfbuzz hb-shape">
            <primary sortas="b-hb-shape">hb-shape</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hb-subset">
        <term><command>hb-subset</command></term>
        <listitem>
          <para>
            is used to create subsets of fonts, and display text using them
          </para>
          <indexterm zone="harfbuzz hb-subset">
            <primary sortas="b-hb-subset">hb-subset</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hb-view">
        <term><command>hb-view</command></term>
        <listitem>
          <para>
            displays a graphical view of a string shape using a
            particular font as a set of glyphs. The output format is
            automatically defined by the file extension, the supported ones
            being ansi/png/svg/pdf/ps/eps. For example:
            <command>hb-view --output-file=hello.png
              /usr/share/fonts/dejavu/DejaVuSans.ttf "Hello World."</command>
          </para>
          <indexterm zone="harfbuzz hb-view">
            <primary sortas="b-hb-view">hb-view</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libharfbuzz">
        <term><filename class="libraryfile">libharfbuzz.so</filename></term>
        <listitem>
          <para>
            is the HarfBuzz text shaping library
          </para>
          <indexterm zone="harfbuzz libharfbuzz">
            <primary sortas="c-libharfbuzz">libharfbuzz.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libharfbuzz-cairo">
        <term><filename class="libraryfile">libharfbuzz-cairo.so</filename></term>
        <listitem>
          <para>
            provides Cairo integration for the Harfbuzz text shaping library
          </para>
          <indexterm zone="harfbuzz libharfbuzz-cairo">
            <primary sortas="c-libharfbuzz-cairo">libharfbuzz-cairo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libharfbuzz-gobject">
        <term><filename class="libraryfile">libharfbuzz-gobject.so</filename></term>
        <listitem>
          <para>
            provides GObject integration for the HarfBuzz text shaping library
          </para>
          <indexterm zone="harfbuzz libharfbuzz-gobject">
            <primary sortas="c-libharfbuzz-gobject">libharfbuzz-gobject.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libharfbuzz-icu">
        <term><filename class="libraryfile">libharfbuzz-icu.so</filename></term>
        <listitem>
          <para>
            provides ICU integration for the HarfBuzz text shaping library
          </para>
          <indexterm zone="harfbuzz libharfbuzz-icu">
            <primary sortas="c-libharfbuzz-icu">libharfbuzz-icu.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libharfbuzz-subset">
        <term><filename class="libraryfile">libharfbuzz-subset.so</filename></term>
        <listitem>
          <para>
            provides API functions for performing subsetting operations on font
            files
          </para>
          <indexterm zone="harfbuzz libharfbuzz-subset">
            <primary sortas="c-libharfbuzz-subset">libharfbuzz-subset.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
