<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="xorg-config">
  <?dbhtml filename="xorg-config.html"?>


  <title>Xorg-&xorg-version; Testing og Konfigurasjon</title>

  <indexterm zone="xorg-config">
    <primary sortas="g-configuring-xorg">Konfigurere Xorg</primary>
  </indexterm>

  <sect2 id='X11-testing' xreflabel="Testing Xorg">
    <title>Teste Xorg</title>

    <note>
      <para>
        Før du starter Xorg for første gang, er det nyttig å
        gjenoppbygge bibliotekets hurtiglager ved å kjøre <userinput>ldconfig</userinput>
        som <systemitem class="username">root</systemitem> bruker.
      </para>
    </note>

    <note>
      <para>
        Før du starter Xorg for første gang, er det ofte nødvendig å
        starte systemet på nytt for å sikre at alle passende nisser startes
        og passende sikkerhetsproblemer er riktig innstilt.
        Som et alternativ kan utlogging og innlogging fungere, men
        dette er ikke testet.
      </para>
    </note>

    <warning>
      <para>
        Hvis Xorg henger av en eller annen grunn (for eksempel mangler en skikkelig
        inndata driver), kan systemet slutte å svare på brukerinndata.
        Som en forholdsregel kan du aktivere en magisk <keycap>SysRq</keycap> tast
        før du tester Xorg. Som
        <systemitem class="username">root</systemitem> bruker, utsted:
      </para>

<screen><userinput>echo 4 > /proc/sys/kernel/sysrq</userinput></screen>

      <para>
        Så hvis Xorg henger, er det mulig å bruke
        <keycombo>
          <keycap>Alt</keycap>
          <keycap>SysRq</keycap>
          <keycap>R</keycap>
        </keycombo>
        for å tilbakestille tastaturmodus. Nå skal det kunne brukes
        <keycombo>
          <keycap>Ctrl</keycap>
          <keycap>Alt</keycap>
          <keycap>Fx</keycap>
        </keycombo>
        (erstatte x med et VT nummer) for å bytte til en annen VT.
        Hvis det fungerer, logg inn og drep Xorg ved å bruke kommandolinjen i den nye VT.
      </para>
    </warning>

    <para>
      For å teste <application>Xorg</application> installasjonen, utsted
      <command>startx</command>. Denne kommandoen viser en grunnleggende vindusbehandler
      kalt <emphasis>twm</emphasis> med tre xterm vinduer og ett
      xclock vindu. Xterm vinduet øverst til venstre er en påloggingsterminal og
      kjøre <emphasis>exit</emphasis> fra denne terminalen vil avslutte
      <application>X Window</application> økten.  Det tredje xterm vinduet kan
      bli skjult på systemet ditt av de to andre xtermene.
    </para>

    <note>
      <para>
        Ved testing av <application>Xorg</application> med
        <application>twm</application> vindusbehandler, det blir flere
        advarsler i Xorg loggfilen, <!--<filename revision="sysv">
        /var/log/Xorg.0.log</filename><filename revision="systemd">-->
        $HOME/.local/share/xorg/Xorg.0.log<!--</filename>-->, om manglende fontfiler.
        I tillegg vil det være flere advarsler på tekstmodus
        terminalen (vanligvis tty1) om manglende fonter. Disse advarslene
        påvirker ikke funksjonaliteten, men kan fjernes om ønskelig ved å installere
        <xref linkend="xorg7-legacy"/>.
      </para>
    </note>

    <para>
      Vanligvis er det ingen spesifikk konfigurasjon som kreves for
      <application>Xorg</application>, men tilpasning er mulig. For
      detaljer, se <xref linkend='xconfig'/> under.
    </para>

  </sect2>

  <sect2 role="configuration" id="checking-dri" xreflabel="Checking the DRI
  installation">
    <title>Sjekke Direkte Gjengivelsesinfrastruktur (DRI)
    Installasjonen</title>

    <para>
      DRI er et rammeverk for å gi programvare tilgang til grafikkmaskinvare
      på en sikker og effektiv måte. Den er installert i
      <application>X</application> som standard (ved hjelp av
      <application>Mesa</application>) hvis du har et støttet skjermkort.
    </para>

    <para>
      For å sjekke om DRI drivere er riktig installert, sjekk loggfilen
      <filename>$HOME/.local/share/xorg/Xorg.0.log</filename> (eller
      <filename>/var/log/Xorg.0.log</filename> hvis du har
      bygget <xref linkend="xorg-server"/> med suid biten) for
      uttalelser som:
    </para>

<screen><literal>(II) intel(0): direct rendering: DRI2 Enabled</literal></screen>

    <para>eller</para>

<screen><literal>(II) NOUVEAU(0): Loaded DRI module</literal></screen>

    <note>
      <para>
        DRI konfigurasjonen kan variere hvis du bruker alternative drivere, for eksempel
        som de fra
        <ulink url="https://www.nvidia.com/page/home.html">NVIDIA</ulink> eller
        <ulink url="https://www.amd.com/">AMD</ulink>.
      </para>
    </note>

<!-- With elogind, this is not needed anymore
    <para>
      Selv om alle brukere kan bruke programvareakselerasjon, hvilken som helst 
      maskinvareakselerasjon (DRI2) er kun tilgjengelig for <systemitem
      class="username">root</systemitem> og medlemmer av <systemitem
      class="groupname">video</systemitem> gruppen, men
      <phrase revision="sysv"><emphasis>ConsoleKit2</emphasis></phrase>
      <phrase revision="systemd"><emphasis>systemd-logind</emphasis></phrase>
      tar seg av å legge til alle påloggede brukere til brukerens ACLer
      <filename>/dev/dri/card*</filename>, spesialfilen(e) som gir tilgang
      til maskinvareakselerasjon.<phrase revision="systemd"> Så, videre
      konfigurasjon er ikke nødvendig.</phrase>
    </para>

    <para revision="sysv">
      Hvis driveren din støttes og <emphasis>ConsoleKit2</emphasis> ikke er
      installert, legg til brukere som kan bruke X til <systemitem
      class="groupname">video</systemitem> gruppen:
    </para>

<screen role="root" revision="sysv"><userinput>usermod -a -G video <replaceable>&lt;username&gt;</replaceable></userinput></screen>
-->
    <para>
      En annen måte å finne ut om DRI fungerer som den skal, er å bruke en av
      to valgfrie installerte OpenGL demoprogrammer i <xref
      linkend="mesa"/>. Fra en X terminal, kjør <command>glxinfo</command>
      og se etter uttrykket:
    </para>

<screen><computeroutput>name of display: :0
display: :0  screen: 0
direct rendering: Yes</computeroutput></screen>

    <para>
      Hvis direkte gjengivelse er aktivert, kan du legge til detaljer ved å kjøre
      <command>LIBGL_DEBUG=verbose glxinfo</command>. Dette vil vise
      drivere, enhetsnoder og filer som brukes av DRI systemet.
    </para>

    <para>
      For å bekrefte at DRI2 maskinvareakselerasjon fungerer, kan du (fortsatt i
      X terminalen) kjør kommandoen <command>glxinfo | grep -E "(OpenGL
      vendor|OpenGL renderer|OpenGL version)"</command>.
      Hvis det melder noe <emphasis>annet enn</emphasis>
      <literal>Software Rasterizer</literal> så har du en
      akselerasjon som virker for brukeren som kjørte kommandoen.
    </para>

    <para>
      Hvis maskinvaren din ikke har noen DRI2 driver tilgjengelig, vil den bruke en
      programvarerasterer for direkte gjengivelse. I slike tilfeller kan du bruke en
      ny, LLVM akselerert, programvarerasterer kalt LLVMPipe. For å
      bygge LLVMPipe bare sørg for at <xref linkend="llvm"/> er tilstede ved
      Mesa byggetid. Merk at all dekoding gjøres på CPU i stedet for
      GPUen, slik at skjermen vil kjøre langsommere enn med maskinvareakselerasjon.
      For å sjekke om du bruker LLVMpipe, se gjennom utdataene til glxinfo
      kommandoen ovenfor. Et eksempel på utdata med programvarerasterer
      er vist nedenfor:
    </para>

<screen><computeroutput>OpenGL vendor string: VMware, Inc.
OpenGL renderer string: Gallium 0.4 on llvmpipe (LLVM 3.5, 256 bits)
OpenGL version string: 3.0 Mesa 10.4.5</computeroutput></screen>

    <para>
      Du kan også tvinge LLVMPipe ved å eksportere
      <envar>LIBGL_ALWAYS_SOFTWARE=1</envar> miljøvariabelen når
      Xorg starter.
    </para>

    <para>
      Igjen, hvis du har bygget Mesa OpenGL demoene, kan du også kjøre
      testprogrammet <command>glxgears</command>. Dette programmet får opp et vindu med
      tre gir spinnende rundt. X terminalen vil vise hvor mange bilder det ble
      tegnet hvert femte sekund, så dette vil gi en grov benchmark. Vinduet
      er skalerbar, og bildene som tegnes per sekund er svært avhengig av
      størrelsen på vinduet. På noe maskinvare, <command>glxgears</command> vil
      kjøre synkronisert med det vertikale oppdateringssignalet og bildefrekvensen vil
      være omtrent den samme som skjermens oppdateringsfrekvens.
    </para>

  </sect2>

  <sect2 role="configuration" id="xorg-debug" xreflabel="Debugging Xorg">
    <title>Feilsøke Xorg</title>

    <para>
      Når du starter xorg, er det et par måter å sjekke
      problemer du måtte ha. Hvis systemet kommer opp, kan du se hvilken driver
      som brukes ved å kjøre <command>xdriinfo</command>. Hvis det er
      problemer eller bare for å sjekke, se på <filename>Xorg.0.log</filename>.
    </para>

    <para>
      Plasseringen av <filename>Xorg.0.log</filename> avhenger av hvordan Xorg er
      installert. Hvis instruksjonene i boken følges nøye og
      Xorg startes fra kommandolinjen, vil den være plassert i
      <filename class="directory">$HOME/.local/share/xorg/</filename> mappen.
      Hvis Xorg startes av en skjermbehandler (f.eks. <xref linkend='lightdm'/>,
      <xref linkend='lxdm'/>, eller <xref linkend='gdm'/>) eller hvis
      <filename>$XORG_PREFIX/libexec/Xorg</filename> har suid biten satt,
      vil den ligge i <filename class="directory">/var/log/</filename>
      mappen.
    </para>

    <bridgehead renderas="sect3">Xorg.0.log Problemer</bridgehead>

    <para>
      Når du ser på Xorg.0.log, se etter oppføringer som (EE) eller (WW).
      Nedenfor er noen vanlige oppføringer:
    </para>

    <bridgehead renderas="sect5">(WW) Open ACPI failed (/var/run/acpid.socket)</bridgehead>

    <para>
      Denne advarselen er fordi <xref linkend='acpid'/> ikke er installert. Hvis du
      ikke er på en bærbar datamaskin, kan den trygt ignoreres. Installer på en bærbar datamaskin
      <xref linkend='acpid'/> for å aktivere handlinger som å gjenkjenne når lokket er
      lukket.
    </para>

    <bridgehead renderas="sect5">(WW) VGA arbiter: cannot open kernel arbiter, no multi-card support</bridgehead>

    <para>
      Denne advarselen vises når en vanlig bruker starter Xorg. Biblioteket
      <filename>libpciaccess.so</filename> gir denne advarselen når den
      prøver å åpne <filename>/dev/vga_arbiter</filename>.  Hvis det bare er
      ett skjermkort i systemet, kan det trygt ignoreres. Om ønskelig kan
      tillatelsene til denne enheten endres ved å legge til en udev regel og
      legge til den lokale brukeren i videogruppen. Som &root; bruker:
    </para>

<screen role="root"><userinput>cat > /etc/udev/rules.d/99-vga-arbiter.rules &lt;&lt; EOF
# /etc/udev/rules.d/99-vga-arbiter.rules: Set vga_arbiter group/mode

ACTION=="add", KERNEL=="vga_arbiter", GROUP="video" MODE="0660"
EOF

usermod -a -G video &lt;user running xorg&gt;</userinput></screen>

    <bridgehead renderas="sect5">(EE) AIGLX error: dlopen of /opt/xorg/lib/dri/i965_dri.so failed</bridgehead>

  <para>
    Denne feilen, ledsaget av (EE) AIGLX error: unable to load driver i965, inntreffer
    i noen systemer med Intel baserte grafikkenheter. Det er forårsaket av misforhold
    mellom nåværende <xref linkend='xorg-server'/> og <xref linkend='mesa'/>. Xorg
    bruker ikke lenger i965 driveren og bruker crocus eller iris mesa drivere som
    angitt av <command>xdriinfo</command> kommandoen. Det kan trygt ignoreres.
  </para>

  <para>
    Om ønskelig kan denne advarselen fjernes ved å kommentere ut linjene
    330-331 og 337-338 (LogMessage) i
    <filename>glx/glxdricommon.c</filename> i <xref linkend='xorg-server'/>
    pakken.
  </para>

  </sect2>

  <sect2 role="configuration" id="hybrid-graphics" xreflabel="Hybrid Graphics">
    <title>Hybrid Grafikk</title>

    <para>
      Hybrid Grafikk er fortsatt i eksperimentell tilstand for Linux. Xorg utviklere
      har utviklet en teknologi kalt PRIME som kan brukes til å bytte
      mellom integrert og muxless diskret GPU etter ønske. Automatisk veksling
      er ikke mulig for øyeblikket.
    </para>

    <para>
      For å bruke PRIME for GPU bytte, sørg for at du bruker
      Linux Kernel 3.4 eller nyere (anbefalt). Du trenger siste DRI og
      DDX drivere for din maskinvare og <application>Xorg Server</application>
      1.13 eller senere.
    </para>

    <para>
      <application>Xorg Server</application> burde laste begge GPU driverne
      automatisk. Du kan sjekke det ved å kjøre:
    </para>

<screen><userinput>xrandr --listproviders</userinput></screen>

    <para>
      Det bør for eksempel være to (eller flere) leverandører oppført, for eksempel:
    </para>

<screen><computeroutput>Providers: number : 2
Provider 0: id: 0x7d cap: 0xb, Source Output, Sink Output, Sink Offload crtcs: 3 outputs: 4 associated providers: 1 name:Intel
Provider 1: id: 0x56 cap: 0xf, Source Output, Sink Output, Source Offload, Sink Offload crtcs: 6 outputs: 1 associated providers: 1 name:radeon</computeroutput></screen>

    <para>
      For å kunne kjøre en GLX applikasjon på en diskret GPU, vil du
      trenge å kjøre følgende kommando, hvor &lt;provider&gt; er det mer
      kraftige diskrete kortet, og &lt;sink&gt; er kortet som har en skjerm
      tilkoblet:
    </para>

<screen><userinput>xrandr --setprovideroffloadsink <replaceable>&lt;provider&gt; &lt;sink&gt;</replaceable></userinput></screen>

    <note>
      <para>
        Med nyere <application>Xorg</application> drivere, som modusinnstilling
        eller intel, som er DRI3 kompatible, er ikke kommandoen ovenfor lenger
        nødvendig. Det skader imidlertid ikke.
      </para>
    </note>

    <para>
      Deretter må du eksportere <envar>DRI_PRIME=1</envar> miljøvariabelen
      hver gang du vil at den kraftige GPUen skal brukes. For eksempel,

<screen><userinput>DRI_PRIME=1 glxinfo | grep -E "(OpenGL vendor|OpenGL renderer|OpenGL version)"</userinput></screen>

      vil vise OpenGL leverandør, renderer og versjon for den diskrete GPUen.
    </para>

    <para>
      Hvis den siste kommandoen rapporterer samme OpenGL renderer med og uten
      <envar>DRI_PRIME=1</envar>, må du sjekke installasjonen.
    </para>

  </sect2>

  <sect2 role="configuration" id='xconfig'>
    <title>Sette opp Xorg Enheter</title>

    <para>
      For de fleste maskinvarekonfigurasjoner vil moderne Xorg automatisk
      få serverkonfigurasjonen riktig uten brukerintervensjon. Det
      er imidlertid noen tilfeller der automatisk konfigurasjon vil være feil.
      Følgende er noen eksempler på manuelle konfigurasjonselementer som kan være nyttige
      i disse tilfellene.
    </para>

    <sect3 id="xinput">
      <title>Sette opp X Inndataenheter</title>
      <para>
        For de fleste inndataenheter vil ingen ekstra konfigurasjon være
        nødvendig. Denne delen er kun gitt for informasjonsformål.
      </para>

      <para>
        Et eksempel på standard XKB oppsett kan se ut som følgende (utført som
        <systemitem class="username">root</systemitem> bruker):
      </para>

<screen role="root"><userinput>cat &gt; /etc/X11/xorg.conf.d/xkb-defaults.conf &lt;&lt; "EOF"
<literal>Section "InputClass"
    Identifier "XKB Defaults"
    MatchIsKeyboard "yes"
    Option "XkbLayout" "fr"
    Option "XkbOptions" "terminate:ctrl_alt_bksp"
EndSection</literal>
EOF</userinput></screen>

      <para>
        <quote>XkbLayout</quote> linjen er et eksempel for en fransk (AZERTY)
        tastatur. Endre den til din tastaturmodell. Den linjen er ikke nødvendig for
        et QWERTY (USA) tastatur.
      </para>
    </sect3>

    <sect3 id="xdisplay">
      <title>Finjustere Skjerminnstillinger</title>

      <para>
        Igjen, med moderne Xorg, det er liten eller ingen ekstra konfigurasjon
        nødvendig. Hvis du skulle trenge ekstra alternativer sendt til videodriveren,
        for eksempel kan du bruke noe som følgende (igjen,
        utført som <systemitem class="username">root</systemitem> bruker):
      </para>

<screen role="root"><userinput>cat &gt; /etc/X11/xorg.conf.d/videocard-0.conf &lt;&lt; "EOF"
<literal>Section "Device"
    Identifier  "Videocard0"
    Driver      "radeon"
    VendorName  "Videocard vendor"
    BoardName   "ATI Radeon 7500"
    Option      "NoAccel" "true"
EndSection</literal>
EOF</userinput></screen>

      <para>
        Et annet vanlig oppsett er å ha flere serveroppsett for bruk i
        ulike miljøer. Selv om serveren automatisk oppdager
        tilstedeværelsen av en annen skjerm, kan den få rekkefølgen feil:
      </para>

<screen role="root"><userinput>cat &gt; /etc/X11/xorg.conf.d/server-layout.conf &lt;&lt; "EOF"
<literal>Section "ServerLayout"
    Identifier     "DefaultLayout"
    Screen      0  "Screen0" 0 0
    Screen      1  "Screen1" LeftOf "Screen0"
    Option         "Xinerama"
EndSection</literal>
EOF</userinput></screen>

    </sect3>
  </sect2>
</sect1>
