<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../../general.ent">
  %general-entities;
]>

<sect1 id="grub-setup" xreflabel="Using GRUB to Set Up the Boot Process with UEFI">
  <?dbhtml filename="grub-setup.html"?>


  <title>Using GRUB to Set Up the Boot Process with UEFI</title>

  <sect2>
    <title>Slå Av Sikker Oppstart</title>

    <para>
      BLFS har ikke de nødvendige pakkene for å støtte Sikker Oppstart. Til
      å sette opp oppstartsprosessen med GRUB og UEFI i BLFS, Sikker
      Oppstart må slås av fra konfigurasjonsgrensesnittet til
      fastvaren. Les dokumentasjonen fra produsenten av dtt
      system for å finne ut hvordan.
    </para>
  </sect2>

  <sect2 role="kernel" id="uefi-kernel">
    <title>Kjernekonfigurasjon for UEFI støtte</title>

    <para>
      Aktiver følgende alternativer i kjernekonfigurasjonen og kompiler kjernen på nytt
      om nødvendig:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="grub-setup-kernel.xml"/>

    <variablelist>
      <title>Betydningen av konfigurasjonsalternativene:</title>

      <varlistentry>
        <term><parameter>CONFIG_PARTITION_ADVANCED</parameter></term>
        <listitem>
          <para>Hvis det ikke er aktivert,
          <parameter>CONFIG_EFI_PARTITION</parameter> vil bli aktivert
          automatisk. Men når den er aktivert, må du stille inn
          <parameter>CONFIG_EFI_PARTITION</parameter> til å aktiveres
          også.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>CONFIG_SYSFB_SIMPLEFB</parameter>,
          <parameter>CONFIG_DRM</parameter>,
          <parameter>CONFIG_DRM_FBDEV_EMULATION</parameter>,
          <parameter>CONFIG_DRM_SIMPLEDRM</parameter>,
          <parameter>CONFIG_FB</parameter>, and
          <parameter>CONFIG_FRAMEBUFFER_CONSOLE</parameter></term>
        <listitem>
          <para>Kombinasjonen av disse alternativene gir Linux konsollen
          støtte på toppen av UEFI rammebufferen. For å tillate kjernen
          å skrive ut feilsøkingsmeldinger på et tidlig oppstartsstadium, bør de ikke bli
          bygget som kjernemoduler med mindre en initramfs skal brukes.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <indexterm zone="grub-setup uefi-kernel">
      <primary sortas="d-uefi">UEFI</primary>
    </indexterm>
  </sect2>

  <sect2>
    <title>Opprett en Nødoppstartsdiskett</title>

    <para>
      Sørg for at en nødoppstartsdiskett er klar til å <quote>redde</quote>
      systemet i tilfelle systemet blir uoppstartbart. Å lage en
      nødoppstartsdisk med GRUB for et EFI basert system, finn en ekstra
      USB flashstasjon og opprett et
      <systemitem class="filesystem">vfat</systemitem> filsystemet på den.
      Installer <xref linkend="dosfstools"/> først,
      som <systemitem class="username">root</systemitem> bruker:
    </para>

    <warning>
      <para>
        Følgende kommando vil slette alle mapper og filer på
        partisjonen. Sørg for at USB flashstasjonen ikke inneholder data som
        du trenger, og endre <userinput>sdx1</userinput> til
        enhetsnoden som tilsvarer den første partisjonen til USB flashstasjonen.
        Vær forsiktig så du ikke overskriver harddisken med en skrivefeil!
      </para>
    </warning>

    <screen role="nodump"><userinput>mkfs.vfat /dev/sdx1</userinput></screen>

    <para>
      Fortsatt som <systemitem class="username">root</systemitem> bruker, bruk
      <command>fdisk</command> verktøyet for å sette den første partisjonen
      av USB flashstasjonen til å være en <quote>EFI system</quote> partisjon
      (endre <userinput>sdx</userinput> til enhetsnoden tilsvarende
      til USB flashstasjonen):
    </para>

<screen role="nodump"><userinput>fdisk /dev/sdx</userinput>
<literal>
Welcome to fdisk (util-linux 2.39.1).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): </literal><userinput>t</userinput>
<literal>Partition number (1-9, default 9): </literal><userinput>1</userinput>
<literal>Partition type or alias (type L to list all): </literal><userinput>uefi</userinput>
<literal>Changed type of partition 'Linux filesystem' to 'EFI System'.

Command (m for help): </literal><userinput>w</userinput>
<literal>The partition table has been altered.
Syncing disks.</literal></screen>

    <para>
      Fortsatt som <systemitem class="username">root</systemitem> bruker,
      opprette et monteringspunkt for EFI partisjonen på USB flashstasjonen
      og monter den:
    </para>

<screen role="nodump"><userinput>mount --mkdir -v -t vfat /dev/sdx1 -o codepage=437,iocharset=iso8859-1 \
      /mnt/rescue</userinput></screen>

    <para>
      Installer GRUB for EFI på partisjonen:
    </para>

<screen role="nodump"><userinput>grub-install --target=x86_64-efi --removable \
             --efi-directory=/mnt/rescue --boot-directory=/mnt/rescue</userinput></screen>

    <para>
      Avmonter partisjonen:
    </para>

<screen role="nodump"><userinput>umount /mnt/rescue</userinput></screen>

    <para>
      Nå kan USB flashstasjonen brukes som en nødoppstartsdisk på hvilken som helst x86-64
      UEFI plattform. Det vil starte opp systemet og vise GRUB skallet. Så kan
      du skrive kommandoer for å starte operativsystemet fra harddisken.
      For å lære hvordan du velger oppstartsenhet, les bruksanvisningen til ditt
      hovedkort eller bærbar PC.
    </para>

  </sect2>

  <sect2>
    <title>Finn eller Opprett EFI Systempartisjonen</title>

    <para>
      På EFI baserte systemer er oppstartslastere installert i en spesiell FAT32
      partisjon kalt <emphasis>EFI System Partition</emphasis> (ESP).
      Hvis systemet ditt støtter EFI, og en nyere versjon av en Linux
      distribusjon eller Windows er forhåndsinstallert, er det sannsynlig at ESP
      allerede er opprettet. Som
      <systemitem class="username">root</systemitem> bruker, list opp alle
      partisjoner på harddisken (erstatt <userinput>sda</userinput>
      med enheten som tilsvarer den aktuelle harddisken):
    </para>

    <screen role="nodump"><userinput>fdisk -l /dev/sda</userinput></screen>

    <para>
      The <quote>Type</quote> kolonnen i ESP skal være
      <literal>EFI System</literal>.
    </para>

    <para>
      Hvis systemet eller harddisken er ny, eller det er den første
      installasjon av et UEFI oppstartet OS på systemet, kan det hende at ESP ikke eksisterer.
      Installer i så fall <xref linkend='dosfstools'/> først. Deretter oppretter du
      en ny partisjon, lag et
      <systemitem class="filesystem">vfat</systemitem> filsystem på den,
      og sett partisjonstypen til <quote>EFI system</quote>.  Se
      instruksjoner for nødoppstartsenheten ovenfor som referanse.
    </para>

    <warning>
      <para>
        Noen (gamle) UEFI implementeringer kan kreve at ESP er den første
        partisjon på disken.
      </para>
    </warning>

    <para>
      Nå, som <systemitem class="username">root</systemitem> bruker,
      lag monteringspunktet for ESP, og monter det (erstatt
      <userinput>sda1</userinput> med enhetsnoden som tilsvarer
      ESP):
    </para>

<screen role="nodump"><userinput>mount --mkdir -v -t vfat /dev/sda1 -o codepage=437,iocharset=iso8859-1 \
      /boot/efi</userinput></screen>

    <para>
      Hvis du vil montere ESP automatisk under systemoppstart,
      som &root; bruker, legg til en oppføring for ESP i
      <filename>/etc/fstab</filename>:
    </para>

<screen role="nodump"><userinput>cat &gt;&gt; /etc/fstab &lt;&lt; EOF</userinput>
<literal>/dev/sda1 /boot/efi vfat codepage=437,iocharset=iso8859-1 0 1</literal>
<userinput>EOF</userinput></screen>

  </sect2>

  <sect2>
    <title>Minimal Oppstartskonfigurasjon med GRUB og EFI</title>

    <para>
      På UEFI baserte systemer fungerer GRUB ved å installere en EFI applikasjon
      (en spesiell type kjørbar) inn i ESP. EFI fastvaren vil
      søke oppstartslastere i EFI applikasjoner fra registrerte oppstartsoppføringer
      i EFI variabler, og i tillegg en hardkodet bane
      <filename>EFI/BOOT/BOOTX64.EFI</filename>.  Vanligvis en oppstartslaster
      som skal installeres i en tilpasset bane, og banen skal registreres
      i EFI variablene. Bruken av den hardkodede banen bør
      unngås hvis mulig. Men i noen tilfeller må vi bruke
      den hardkodede banen:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          Systemet er ikke oppstartet med EFI ennå, noe som gjør EFI variabler
          utilgjengelig.
        </para>
      </listitem>
      <listitem>
        <para>
          EFI fastvaren er 64-bit, men LFS-systemet er 32-bit, noe som gjør
          EFI variabler utilgjengelige fordi kjernen ikke kan påkalle EFI
          kjøretidstjenester med en annen virtuell adresselengde.
        </para>
      </listitem>
      <listitem>
        <para>
          LFS er bygget for en Live USB, så vi kan ikke stole på EFI variabler,
          som er lagret i NVRAM eller EEPROM på den lokale maskinen.
        </para>
      </listitem>
      <listitem>
        <para>
          Du er ikke i stand til eller vil ikke installere
          <application>efibootmgr</application> for å manipulere
          oppstartsoppføringer i EFI variabler.
        </para>
      </listitem>
    </itemizedlist>

    <para>
      I disse tilfellene, følg disse instruksjonene for å installere GRUB EFI
      applikasjonen inn i den hardkodede banen og lag en minimal
      oppstartskonfigurasjon. Ellers er det bedre å gå videre og sette opp
      oppstartskonfigurasjon normalt.
    </para>

    <para>
      For å installere GRUB med EFI applikasjonen i den hardkodede
      banen <filename>EFI/BOOT/BOOTX64.EFI</filename>, sørg først for at
      oppstartspartisjonen er montert som <filename class="directory">/boot</filename>
      og ESP er montert som
      <filename class="directory">/boot/efi</filename>.  Deretter, som &root;
      bruker, kjør kommandoen:
    </para>

    <note>
      <para>
        Denne kommandoen vil overskrive
        <filename>/boot/efi/EFI/BOOT/BOOTX64.EFI</filename>.  Det kan ødelegge en
        oppstartslaster allerede installert der. Sikkerhetskopier den hvis du ikke er sikker.
      </para>
    </note>

    <screen role="nodump"><userinput>grub-install --target=x86_64-efi --removable</userinput></screen>

    <para>
      Denne kommandoen vil installere GRUB EFI applikasjonen i den hardkodede banen
      <filename>/boot/efi/EFI/BOOT/BOOTX64.EFI</filename>, så EFI
      fastvaren kan finne og laste den. De resterende GRUB filene er installert
      i <filename class="directory">/boot/grub</filename> mappen og
      vil bli lastet av <filename>BOOTX64.EFI</filename> under systemoppstart.
    </para>

    <note>
      <para>
        EFI fastvaren foretrekker vanligvis EFI applikasjonene med en bane
        lagret i EFI variabler til EFI
        applikasjon på den hardkodede banen. Så du må kanskje påkalle
        oppstartsmeny eller fastvareinnstillingsgrensesnitt for å velge
        den nyinstallert GRUB manuelt ved neste oppstart. Les manualen til
        hovedkortet eller den bærbare datamaskinen for å lære hvordan.
      </para>
    </note>

    <para>
      Hvis du har fulgt instruksjonene i denne delen og satt opp en minimal
      oppstartskonfigurasjon, hopp nå videre til
      <quote>Opprette GRUB Konfigurasjonsfilen</quote>.
    </para>
  </sect2>

  <sect2>
    <title>Monter EFI Variabelt Filsystem</title>

    <para>
      Installasjonen av GRUB på en UEFI plattform krever at et EFI variabelt
      filsystem, <systemitem class="filesystem">efivarfs</systemitem>, er
      montert. Som <systemitem class="username">root</systemitem> bruker,
      monter det hvis det ikke allerede er montert:
    </para>

<screen role="nodump"><userinput>mountpoint /sys/firmware/efi/efivars || mount -v -t efivarfs efivarfs /sys/firmware/efi/efivars</userinput></screen>

    <note revision="systemd">
      <para>
        Hvis systemet startes opp med UEFI og systemd,
        <systemitem class="filesystem">efivarfs</systemitem> vil bli montert
        automatisk. Men i LFS chrootmiljøet trenger det fortsatt
        å monteres manuelt.
      </para>
    </note>

    <para revision="sysv">
      Legg nå til en oppføring for
      <systemitem class="filesystem">efivarfs</systemitem> i
      <filename>/etc/fstab</filename> så den monteres automatisk
      under systemoppstart:
    </para>

<screen revision="sysv" role="nodump"><userinput>cat &gt;&gt; /etc/fstab &lt;&lt; EOF</userinput>
<literal>efivarfs /sys/firmware/efi/efivars efivarfs defaults 0 0</literal>
<userinput>EOF</userinput></screen>

    <warning>
      <para>
        Hvis systemet ikke er startet opp med UEFI, vil mappen
        <filename class="directory">/sys/firmware/efi</filename> 
        mangle. I dette tilfellet bør du starte systemet i UEFI modus med
        nødoppstartsdisken eller ved å bruke en minimal oppstartskonfigurasjon opprettet som
        over, og monter deretter
        <systemitem class="filesystem">efivarfs</systemitem> og fortsett.
      </para>
    </warning>
  </sect2>

  <sect2>
    <title>Sette Opp Konfigurasjonen</title>

    <para>
      På UEFI baserte systemer fungerer GRUB ved å installere en EFI applikasjon
      (en spesiell type kjørbar) i
      <filename class="directory">/boot/efi/EFI/[id]/grubx64.efi</filename>,
      hvor <filename class="directory">/boot/efi</filename> er monteringspunktet
      til ESP, og <literal>[id]</literal> erstattes med en
      identifikator spesifisert i <command>grub-install</command> kommandolinjen.
      GRUB vil opprette en oppføring i EFI variablene som inneholder
      banen <literal>EFI/[id]/grubx64.efi</literal> så EFI fastvaren
      kan finne <filename>grubx64.efi</filename> og laste den.
    </para>

    <para>
      <filename>grubx64.efi</filename> er veldig lite (136 KB med
      GRUB-2.06), så den vil ikke bruke mye plass i ESP. En typisk ESP
      størrelse er 100 MB (for Windows oppstartsbehandler, som bruker omtrent 50 MB i
      ESP). Med en gang <filename>grubx64.efi</filename> har blitt lastet av
      fastvare, vil den laste GRUB moduler fra oppstartspartisjonen.
      Standardplasseringen er
      <filename class="directory">/boot/grub</filename>.
    </para>

    <para>
      Som <systemitem class="username">root</systemitem> bruker, installer
      GRUB filer i <filename>/boot/efi/EFI/LFS/grubx64.efi</filename>
      og <filename class="directory">/boot/grub</filename>. Sett deretter opp
      oppstartsoppføringer i EFI variablene:
    </para>

<screen role="nodump"><userinput>grub-install --bootloader-id=LFS --recheck</userinput></screen>

    <para>
      Hvis installasjonen er vellykket, bør utdataen være:
    </para>

<screen role="nodump"><literal>Installing for x86_64-efi platform.
Installation finished. No error reported.</literal></screen>

    <para>
      Kjør <command>efibootmgr | cut -f 1</command> kommandoen for å kontrollere EFI oppstarskonfigurasjonen på nytt.
      Et eksempel på utdataen er:
    </para>

<screen role="nodump"><literal>BootCurrent: 0000
Timeout: 1 seconds
BootOrder: 0005,0000,0002,0001,0003,0004
Boot0000* ARCH
Boot0001* UEFI:CD/DVD Drive
Boot0002* Windows Boot Manager
Boot0003* UEFI:Removable Device
Boot0004* UEFI:Network Device
Boot0005* LFS</literal></screen>

    <para>
      Merk at <literal>0005</literal> er den første i
      <literal>BootOrder</literal>, og <literal>Boot0005</literal>
      er <literal>LFS</literal>. Dette betyr at på neste oppstart, vil
      versjonen av GRUB installert av LFS bli brukt til å starte opp systemet.
    </para>

  </sect2>

  <sect2>
    <title>Opprette GRUB Konfigurasjonsfilen</title>

    <indexterm zone="grub-setup grub-video">
      <primary sortas="e-boot-grub-grub-cfg">/boot/grub/grub.cfg</primary>
    </indexterm>

    <para>
      Generer <filename>/boot/grub/grub.cfg</filename> for å konfigurere
      oppstartsmenyen for GRUB:
    </para>

<screen role="nodump"><userinput>cat &gt; /boot/grub/grub.cfg &lt;&lt; EOF</userinput>
<literal># Begin /boot/grub/grub.cfg
set default=0
set timeout=5

insmod part_gpt
insmod ext2
set root=(hd0,2)

insmod all_video
if loadfont /boot/grub/fonts/unicode.pf2; then
  terminal_output gfxterm
fi

menuentry "GNU/Linux, Linux 6.4.10-lfs-12.0"  {
  linux   /boot/vmlinuz-6.4.10-lfs-12.0 root=/dev/sda2 ro
}

menuentry "Firmware Setup" {
  fwsetup
}</literal>
<userinput>EOF</userinput></screen>

    <para>
      Referer til <ulink url='&lfs-root;/chapter10/grub.html'>LFS
      boken</ulink> for grunnleggende kunnskap om
      <filename>grub.cfg</filename> filen.
      <literal>(hd0,2)</literal>, <literal>sda2</literal>, og
      <literal>6.4.10-lfs-12.0</literal> må stemme overens med din
      konfigurasjon.
    </para>

    <para>
       <command>insmod all_video</command> direktivet laster ulike
      moduler for videostøtte. Det er nødvendig for å initialisere EFI
      framebuffer for at kjernen skal skrive ut meldinger riktig før
      initialisering av kjerne GPU driver.
    </para>

    <para>
      <command>terminal_output gfxterm</command> direktivet endrer
      skjermoppløsningen til GRUB menyen for å matche skjermenheten din.
      Det vil bryte gjengivelsen hvis <filename>unicode.pf2</filename>
      fontdatafilen ikke er lastet inn, så den er beskyttet av et
      <command>if</command> direktiv.
    </para>

    <note>
      <para>
        Fra GRUB sitt perspektiv er filene i forhold til partisjonene
        brukt. Hvis du brukte en separat /bootpartisjon, fjern /boot fra
        overstående stier (til kjernen og til <filename>unicode.pf2</filename>). Du
        må også endre "set root" linjen for å peke til
        oppstartspartisjonen.
      </para>
    </note>

    <para>
      The <literal>Firmware Setup</literal> oppføringen kan brukes til å angi
      konfigurasjonsgrensesnitt levert av fastvaren (noen ganger kalt
      <quote>BIOS configuration</quote>).
    </para>
  </sect2>

  <sect2>
    <title>Oppstart sammen med Windows</title>

    <para>
      Legg til en menyoppføring for Windows i <filename>grub.cfg</filename>:
    </para>

<screen role="nodump"><userinput>cat &gt;&gt; /boot/grub/grub.cfg &lt;&lt; EOF</userinput>
<literal># Begin Windows addition

menuentry "Windows 11" {
  insmod fat
  insmod chain
  set root=(hd0,1)
  chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}</literal>
<userinput>EOF</userinput></screen>

    <para>
      <literal>(hd0,1)</literal> bør erstattes med det GRUB
      utpekte navnet for ESP.  <literal>chainloader</literal>
      direktivet kan brukes til å fortelle GRUB om å kjøre en annen EFI kjørbar,
      i dette tilfellet Windows Boot Manager. Du kan bruke mer brukbare verktøy
      i EFI kjørbart format (for eksempel et EFI skall) inn i ESP og
      lage GRUB oppføringer for dem også.
    </para>

  </sect2>

</sect1>
