<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY iptables-download-http "https://www.netfilter.org/projects/iptables/files/iptables-&iptables-version;.tar.xz">
  <!ENTITY iptables-download-ftp  " ">
  <!ENTITY iptables-md5sum        "44191ce12055da9790a92429c771ba50">
  <!ENTITY iptables-size          "636 KB">
  <!ENTITY iptables-buildsize     "16 MB">
  <!ENTITY iptables-time          "0.1 SBU">
]>

<sect1 id="iptables" xreflabel="iptables-&iptables-version;">
  <?dbhtml filename="iptables.html"?>


  <title>iptables-&iptables-version;</title>

  <indexterm zone="iptables">
    <primary sortas="a-iptables">iptables</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduksjon til iptables</title>

    <para>
      <application>iptables</application> er et kommandolinjeprogram for brukerområdet
      som brukes til å konfigurere Linux 2.4 og nyere regelsett for kjernepakkefiltrering.
    </para>

    &lfs122_checked;

    <bridgehead renderas="sect3">Pakkeinformasjon</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Nedlasting (HTTP): <ulink url="&iptables-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting (FTP): <ulink url="&iptables-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlasting MD5 sum: &iptables-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Nedlastingsstørrelse: &iptables-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert diskplass som kreves: &iptables-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimert byggetid: &iptables-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">iptables Avhengigheter</bridgehead>

    <bridgehead renderas="sect4">Valgfri</bridgehead>
    <para role="optional">
<!--      <xref linkend="nftables"/>, -->
      <xref linkend="libpcap"/> (kreves for BPFkompilator eller nfsynproxy støtte),
      <ulink url="https://github.com/tadamdam/bpf-utils">bpf-utils</ulink>
      (kreves for støtte for Berkeley Packet Filter),
      <ulink url="https://netfilter.org/projects/libnfnetlink/">libnfnetlink</ulink>
      (kreves for connlabel støtte),
      <ulink url="https://netfilter.org/projects/libnetfilter_conntrack/">libnetfilter_conntrack</ulink>
      (kreves for connlabel støtte), og
      <ulink url="https://netfilter.org/projects/nftables/">nftables</ulink>
    </para>

  </sect2>

  <sect2 role="kernel" id="iptables-kernel">
    <title>Kjernekonfigurasjon</title>

    <para>
      En brannmur i Linux oppnås gjennom netfilter grensesnittet. For
      å bruke <application>iptables</application> til å konfigurere netfilter
      Følgende kjernekonfigurasjonsparametere kreves:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="iptables-kernel.xml"/>

    <para>
      Inkluder eventuelle tilkoblingssporingsprotokoller som vil bli brukt, så vel som
      eventuelle protokoller du ønsker å bruke for matchende støtte under
       "Core Netfilter Configuration" delen. Alternativene ovenfor er nok
      for kjøre <xref linkend="fw-persFw-ipt"/> under.
    </para>

    <indexterm zone="iptables iptables-kernel">
      <primary sortas="d-iptables">iptables</primary>
    </indexterm>

  </sect2>

    <sect2 role="installation">
      <title>Installasjon av iptables</title>

    <note>
      <para>
        Installasjonen nedenfor inkluderer ikke å bygge noen spesialiserte
        utvidelsesbiblioteker som krever de rå deklarasjonene i
        <application>Linux</application> kildekoden. Hvis du ønsker å bygge
        ekstra utvidelser (hvis du ikke er sikker, så trenger du sannsynligvis ikke det), du
        kan se på <filename>INSTALL</filename> filen for å se et eksempel på
        hvordan å endre <parameter>KERNEL_DIR=</parameter> parameteren til å peke
        på <application>Linux</application> kildekoden. Merk at hvis du
        oppgradere kjerneversjonen, kan det hende at du også må kompilere
        <application>iptables</application> på nytt og at BLFS teamet ikke har
        testet ved hjelp av rå kjernedeklarasjoner.
      </para>
    </note>

    <para>
      Installer <application>iptables</application> ved å kjøre følgende
      kommandoer:
    </para>

<screen><userinput>./configure --prefix=/usr      \
            --disable-nftables \
            --enable-libipq    &amp;&amp;
make</userinput></screen>

    <para>
      <!-- there is a iptables-test.py script which seems to run a
      lot of tests. Unfortunately, success rate is 50% only. Needs
      to be clarified how to use and which prerequisites are required
      to run to 100%. Contacted Shekhar Sharma for that (Dec'19),
      waiting for answer (thomas). -->
      Denne pakken kommer ikke med en testpakke.
    </para>

    <para>
      Nå, som <systemitem class="username">root</systemitem> bruker:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Parameterforklaringer</title>

    <para>
      <parameter>--disable-nftables</parameter>: Denne bryteren deaktiverer bygging
      av nftables kompatibilitet. <!--Omit this switch if you have installed
      <xref linkend="nftables"/>.-->
    </para>

    <para>
      <parameter>--enable-libipq</parameter>: Denne bryteren gjør det mulig å bygge
      <filename class="libraryfile">libipq.so</filename> som
      kan brukes av noen pakker utenfor BLFS.
    </para>

    <para>
      <option>--enable-nfsynproxy</option>: Denne bryteren muliggjør installasjon
      av <application>nfsynproxy</application> SYNPROXY konfigurasjonsverktøy.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Konfigurere iptables</title>
<!--
    <note>
      <para>
        Hvis du har tenkt å bruke <xref linkend="firewalld"/> for å konfigurere din
        brannmurregler, bør du ikke bruke eksempelkonfigurasjonene
        her, og du bør heller ikke aktivere
        <phrase revision="sysv">bootscript.</phrase>
        <phrase revision="systemd">systemd enheten.</phrase>
      </para>
    </note>
-->
    <note>
      <para>
        I følgende eksempelkonfigurasjoner, <emphasis
        role="strong">LAN1</emphasis> brukes for det interne LAN grensesnittet,
        og <emphasis role="strong">WAN1</emphasis> brukes til det ytre
        grensesnittet koblet til Internett. Du må erstatte disse
        verdiene med passende grensesnittnavn for systemet ditt.
      </para>
    </note>

    <sect3 id="fw-persFw-ipt"
    xreflabel="Opprette en Personlig Brannmur med iptables">
      <title>Personlig Brannmur</title>

      <para>
        En Personlig Brannmur er designet for å gi deg tilgang til alle
        tjenester som tilbys på Internett mens du holder datamaskinen sikker og
        dataene dine private.
      </para>

      <para>
        Nedenfor er en litt modifisert versjon av Rusty Russells
        anbefaling fra <ulink
        url="https://www.netfilter.org/documentation/HOWTO/packet-filtering-HOWTO.html">
        Linux 2.4 Packet Filtering HOWTO</ulink>. Det gjelder fortsatt
        for Linux 6.x kjernene.
      </para>

<screen role="root" revision="sysv"><?dbfo keep-together="auto"?><userinput>cat &gt; /etc/rc.d/rc.iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Begin rc.iptables

# Insert connection-tracking modules
# (not needed if built into the kernel)
modprobe nf_conntrack
modprobe xt_LOG

# Enable broadcast echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Disable Source Routed Packets
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_source_route

# Enable TCP SYN Cookie Protection
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Disable ICMP Redirect Acceptance
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_redirects

# Do not send Redirect Messages
echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Drop Spoofed Packets coming in on an interface, where responses
# would result in the reply going out a different interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Log packets with impossible addresses.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians
echo 1 &gt; /proc/sys/net/ipv4/conf/default/log_martians

# be verbose on dynamic ip-addresses  (not needed in case of static IP)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# disable Explicit Congestion Notification
# too many routers are still ignorant
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Set a known state
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# These lines are here in case rules are already in place and the
# script is ever rerun on the fly. We want to remove all rules and
# pre-existing user defined chains before we implement new rules.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Allow local-only connections
iptables -A INPUT  -i lo -j ACCEPT

# Free output on any interface to any ip for any service
# (equal to -P ACCEPT)
iptables -A OUTPUT -j ACCEPT

# Permit answers on already established connections
# and permit new connections related to established ones
# (e.g. port mode ftp)
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Drop any incoming MULTICAST or BROADCAST packet before logging:
# The box outputs several of them when using netbios or mDNS, and those
# appear immediately as incoming, which clutters the log.
iptables -A INPUT -m addrtype --dst-type BROADCAST,MULTICAST -j DROP

# Log everything else.
iptables -A INPUT -j LOG --log-prefix "FIREWALL:INPUT "

# End $rc_base/rc.iptables</literal>
EOF
chmod 700 /etc/rc.d/rc.iptables</userinput></screen>

<screen role="root" revision="systemd"><?dbfo keep-together="auto"?><userinput>install -v -dm755 /etc/systemd/scripts

cat &gt; /etc/systemd/scripts/iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Begin /etc/systemd/scripts/iptables

# Insert connection-tracking modules
# (not needed if built into the kernel)
modprobe nf_conntrack
modprobe xt_LOG

# Enable broadcast echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Disable Source Routed Packets
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_source_route

# Enable TCP SYN Cookie Protection
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Disable ICMP Redirect Acceptance
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_redirects

# Do not send Redirect Messages
echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Drop Spoofed Packets coming in on an interface, where responses
# would result in the reply going out a different interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Log packets with impossible addresses.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians
echo 1 &gt; /proc/sys/net/ipv4/conf/default/log_martians

# be verbose on dynamic ip-addresses  (not needed in case of static IP)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# disable Explicit Congestion Notification
# too many routers are still ignorant
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Set a known state
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# These lines are here in case rules are already in place and the
# script is ever rerun on the fly. We want to remove all rules and
# pre-existing user defined chains before we implement new rules.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Allow local-only connections
iptables -A INPUT  -i lo -j ACCEPT

# Free output on any interface to any ip for any service
# (equal to -P ACCEPT)
iptables -A OUTPUT -j ACCEPT

# Permit answers on already established connections
# and permit new connections related to established ones
# (e.g. port mode ftp)
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Log everything else.
iptables -A INPUT -j LOG --log-prefix "FIREWALL:INPUT "

# End /etc/systemd/scripts/iptables</literal>
EOF
chmod 700 /etc/systemd/scripts/iptables</userinput></screen>

      <para>
        Dette skriptet er ganske enkelt, det dropper all trafikk som kommer
        inn til datamaskinen din som ikke ble startet fra datamaskinen din, men
        så lenge du bare surfer på Internett er det usannsynlig at
        du overskride sine grenser.
      </para>

      <para>
        Hvis du ofte møter visse forsinkelser ved tilgang til
        FTP servere, ta en titt på <xref linkend="fw-BB-4-ipt"/>.
      </para>

      <para>
        Selv om du har nisser eller tjenester som kjører på systemet ditt,
        vil disse være utilgjengelige overalt bortsett fra datamaskinen selv.
        Hvis du vil tillate tilgang til tjenester på maskinen din, som f.eks
        <command>ssh</command> eller <command>ping</command>, se på
        <xref linkend="fw-busybox-ipt"/>.
      </para>

    </sect3>

    <sect3 id="fw-masqRouter-ipt"
     xreflabel="Opprette Maskering av Ruter med iptables">
      <title>Maskering av Ruter</title>

      <para>
        En nettverksbrannmur har to grensesnitt, ett koblet til et
        intranett, i dette eksemplet <emphasis role="strong">LAN1</emphasis>,
        og en koblet til Internett, her <emphasis
        role="strong">WAN1</emphasis>. For å gi maksimal sikkerhet
        for selve brannmuren, sørg for at det ikke er unødvendige
        servere som kjører på den, f.eks <application>X11</application>.
        Som et generelt prinsipp skal selve brannmuren ikke ha tilgang
        til enhver upålitelig tjeneste (tenk på en ekstern server som gir et svar
        som får en nisse på systemet til å krasjer, eller enda verre, som implementerer
        en orm via et buffer-overflow.
      </para>

<screen role="root" revision="sysv"><?dbfo keep-together="auto"?><userinput>cat &gt; /etc/rc.d/rc.iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Begin rc.iptables

echo
echo "You're using the example configuration for a setup of a firewall"
echo "from Beyond Linux From Scratch."
echo "This example is far from being complete, it is only meant"
echo "to be a reference."
echo "Firewall security is a complex issue, that exceeds the scope"
echo "of the configuration rules below."
echo "You can find additional information"
echo "about firewalls in Chapter 4 of the BLFS book."
echo "https://www.&lfs-domainname;/blfs"
echo

# Insert iptables modules (not needed if built into the kernel).

modprobe nf_conntrack
modprobe nf_conntrack_ftp
modprobe xt_conntrack
modprobe xt_LOG
modprobe xt_state

# Enable broadcast echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Disable Source Routed Packets
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Enable TCP SYN Cookie Protection
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Disable ICMP Redirect Acceptance
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Don't send Redirect Messages
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Drop Spoofed Packets coming in on an interface where responses
# would result in the reply going out a different interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Log packets with impossible addresses.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians

# Be verbose on dynamic ip-addresses  (not needed in case of static IP)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# Disable Explicit Congestion Notification
# Too many routers are still ignorant
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Set a known state
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# These lines are here in case rules are already in place and the
# script is ever rerun on the fly. We want to remove all rules and
# pre-existing user defined chains before we implement new rules.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Allow local connections
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Allow forwarding if the initiated on the intranet
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD ! -i WAN1 -m conntrack --ctstate NEW       -j ACCEPT

# Do masquerading
# (not needed if intranet is not using private ip-addresses)
iptables -t nat -A POSTROUTING -o WAN1 -j MASQUERADE

# Log everything for debugging
# (last of all rules, but before policy rules)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD "
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# Enable IP Forwarding
echo 1 &gt; /proc/sys/net/ipv4/ip_forward</literal>
EOF
chmod 700 /etc/rc.d/rc.iptables</userinput></screen>

<screen role="root" revision="systemd"><?dbfo keep-together="auto"?><userinput>install -v -dm755 /etc/systemd/scripts

cat &gt; /etc/systemd/scripts/iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Begin /etc/systemd/scripts/iptables

echo
echo "You're using the example configuration for a setup of a firewall"
echo "from Beyond Linux From Scratch."
echo "This example is far from being complete, it is only meant"
echo "to be a reference."
echo "Firewall security is a complex issue, that exceeds the scope"
echo "of the configuration rules below."

echo "You can find additional information"
echo "about firewalls in Chapter 4 of the BLFS book."
echo "https://www.&lfs-domainname;/blfs"
echo

# Insert iptables modules (not needed if built into the kernel).

modprobe nf_conntrack
modprobe nf_conntrack_ftp
modprobe xt_conntrack
modprobe xt_LOG
modprobe xt_state

# Enable broadcast echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Disable Source Routed Packets
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Enable TCP SYN Cookie Protection
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Disable ICMP Redirect Acceptance
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Don't send Redirect Messages
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Drop Spoofed Packets coming in on an interface where responses
# would result in the reply going out a different interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Log packets with impossible addresses.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians

# Be verbose on dynamic ip-addresses  (not needed in case of static IP)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# Disable Explicit Congestion Notification
# Too many routers are still ignorant
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Set a known state
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# These lines are here in case rules are already in place and the
# script is ever rerun on the fly. We want to remove all rules and
# pre-existing user defined chains before we implement new rules.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Allow local connections
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Allow forwarding if the initiated on the intranet
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD ! -i WAN1 -m conntrack --ctstate NEW       -j ACCEPT

# Do masquerading
# (not needed if intranet is not using private ip-addresses)
iptables -t nat -A POSTROUTING -o WAN1 -j MASQUERADE

# Log everything for debugging
# (last of all rules, but before policy rules)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD "
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# Enable IP Forwarding
echo 1 &gt; /proc/sys/net/ipv4/ip_forward

# The following sections allow inbound packets for specific examples
# Uncomment the example lines and adjust as necessary

# Allow ping on the external interface
#iptables -A INPUT  -p icmp -m icmp --icmp-type echo-request -j ACCEPT
#iptables -A OUTPUT -p icmp -m icmp --icmp-type echo-reply   -j ACCEPT

# Reject ident packets with TCP reset to avoid delays with FTP or IRC
#iptables -A INPUT  -p tcp --dport 113 -j REJECT --reject-with tcp-reset

# Allow HTTP and HTTPS to 192.168.0.2
#iptables -A PREROUTING -t nat -i WAN1 -p tcp --dport 80 -j DNAT --to 192.168.0.2
#iptables -A PREROUTING -t nat -i WAN1 -p tcp --dport 443 -j DNAT --to 192.168.0.2
#iptables -A FORWARD -p tcp -d 192.168.0.2 --dport 80 -j ACCEPT
#iptables -A FORWARD -p tcp -d 192.168.0.2 --dport 443 -j ACCEPT

# End /etc/systemd/scripts/iptables</literal>
EOF
chmod 700 /etc/systemd/scripts/iptables</userinput></screen>

      <para>
        Med dette skriptet skal intranettet ditt være rimelig sikkert
        mot ytre angrep. Ingen skal kunne sette opp en ny
        tilkobling til en hvilken som helst intern tjeneste, og hvis den er maskert,
        gjør intranettet ditt usynlig for Internett. Videre, brannmuren
        din skal være relativt trygg fordi det ikke finnes noen tjenester
        som kjører som en angriper kunne angripe.
      </para>

    </sect3>

    <sect3 id="fw-busybox-ipt" xreflabel="Opprette BusyBox med iptables">
      <title>BusyBox</title>

      <para>
        Dette scenariet er ikke så forskjellig fra <xref
        linkend="fw-masqRouter-ipt"/>, men tilbyr i tillegg noen
        tjenester til intranettet ditt. Eksempler på dette kan være når
        du ønsker å administrere brannmuren fra en annen vert
        på intranettet ditt eller bruke det som en proxy eller en navneserver.
      </para>

      <note>
        <para>
          Å skisserer spesifikt hvordan du beskytter en server som
          tilbyr tjenester på Internett går langt utover omfanget av
          dette dokumentet. Se referansene i <xref linkend="fw-extra-info"/>
          for mer informasjon.
        </para>
      </note>

      <para>
        Vær forsiktig. Hver tjeneste du har aktivert gjør
        oppsettet ditt mer komplekst og brannmuren din mindre sikker. Du er
        utsatt for risikoen for feilkonfigurerte tjenester eller kjører
        en tjeneste med en utnyttbar feil. En brannmur bør generelt
        ikke kjøre noen ekstra tjenester. Se introduksjonen til
        <xref linkend="fw-masqRouter-ipt"/> for flere detaljer.
      </para>

      <para>
        Hvis du ønsker å legge til tjenester som intern Samba eller
        navneservere som ikke trenger tilgang til Internett selv,
        tilleggsutsagnene er ganske enkle og bør fortsatt være
        akseptabelt fra et sikkerhetssynspunkt. Bare legg til følgende linjer
        inn i skriptet <emphasis>før</emphasis> loggingsreglene.
      </para>

<screen><literal>iptables -A INPUT  -i ! WAN1  -j ACCEPT
iptables -A OUTPUT -o ! WAN1  -j ACCEPT</literal></screen>

      <para>
        Hvis nisser, for eksempel squid, må få tilgang til Internett,
        kan du åpne OUTPUT generelt og begrense
        INPUT.
      </para>

<screen><literal>iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -j ACCEPT</literal></screen>

      <para>
        Det er imidlertid generelt ikke tilrådelig å forlate OUTPUT
        ubegrenset. Du mister all kontroll over trojanere som vil
        "ringe hjem", og litt redundans i tilfelle du har
        (feil-)konfigurert en tjeneste slik at den kringkaster dens eksistens
        til verden.
      </para>

      <para>
        For å oppnå dette bør du begrense INPUT og OUTPUT
        på alle porter unntatt de som er absolutt nødvendig å ha
        åpen. Hvilke porter du må åpne avhenger av dine behov: stort sett
        finner du dem ved å se etter mislykkede tilganger i loggfilene
        dine.
      </para>

      <itemizedlist spacing="compact" role='iptables'>
        <title>Ta en Titt på Følgende Eksempler:</title>
        <listitem>
          <para>
            Squid mellomlagrer nettet:
          </para>

<screen><literal>iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT  -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED \
  -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            Din mellomlagrings navneserver (f.eks. named) gjør sine oppslag via UDP:
          </para>

<screen><literal>iptables -A OUTPUT -p udp --dport 53 -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            Du vil ha mulighet å pinge datamaskinen for å sikre at den fortsatt er
            i live:
          </para>

<screen><literal>iptables -A INPUT  -p icmp -m icmp --icmp-type echo-request -j ACCEPT
iptables -A OUTPUT -p icmp -m icmp --icmp-type echo-reply   -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para id='fw-BB-4-ipt' xreflabel="BusyBox with iptables example number 4">
            Hvis du ofte bruker FTP servere eller liker å chatte, kan du
            merke forsinkelser fordi noen implementeringer av disse nissene
            spør en identd nisse på systemet ditt for å få brukernavn. Selv om
            det egentlig er lite skade i dette, å ha en identd kjørende er ikke
            anbefalt fordi mange sikkerhetseksperter føler tjenesten gir
            ut for mye tilleggsinformasjon.
          </para>

          <para>
            For å unngå disse forsinkelsene kan du avvise forespørslene med et
            'tcp-reset' svar:
          </para>

<screen><literal>iptables -A INPUT  -p tcp --dport 113 -j REJECT --reject-with tcp-reset</literal></screen>

        </listitem>
        <listitem>
          <para>
            For å logge og droppe ugyldige pakker (pakker
            som kom inn etter netfilters tidsavbrudd eller noen typer
            nettverksskanninger) sett inn disse reglene øverst i kjeden:
          </para>

<screen><literal>iptables -I INPUT 0 -p tcp -m conntrack --ctstate INVALID \
  -j LOG --log-prefix "FIREWALL:INVALID "
iptables -I INPUT 1 -p tcp -m conntrack --ctstate INVALID -j DROP</literal></screen>

        </listitem>
        <listitem>
          <para>
            Alt som kommer utenfra skal ikke ha en
            privat adresse, dette er et vanlig angrep kalt IP-spoofing:
          </para>

<screen><literal>iptables -A INPUT -i WAN1 -s 10.0.0.0/8     -j DROP
iptables -A INPUT -i WAN1 -s 172.16.0.0/12  -j DROP
iptables -A INPUT -i WAN1 -s 192.168.0.0/16 -j DROP</literal></screen>

          <para>
            Det er andre adresser du kanskje også vil droppe:
            0.0.0.0/8, 127.0.0.0/8, 224.0.0.0/3 (multicast og
            eksperimentell), 169.254.0.0/16 (Koble til lokale nettverk), og
            192.0.2.0/24 (IANA definert testnettverk).
          </para>
        </listitem>
        <listitem>
          <para>
            Hvis brannmuren din er en DHCP klient, må du tillate disse pakkene:
          </para>

<screen><literal>iptables -A INPUT  -i WAN1 -p udp -s 0.0.0.0 --sport 67 \
   -d 255.255.255.255 --dport 68 -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            For å forenkle feilsøking og være rettferdig mot alle som vil
            ha tilgang til en tjeneste du har deaktivert, med vilje eller ved en feiltakelse,
            du kan AVVISE (REJECT) de pakkene som blir droppet.
          </para>

          <para>
            Åpenbart må dette gjøres direkte etter logging
            på siste linjer før pakkene droppes av retningslinjer::
          </para>

<screen><literal>iptables -A INPUT -j REJECT</literal></screen>

        </listitem>
      </itemizedlist>

      <para>
        Dette er bare eksempler for å vise deg noen av egenskapene
        til brannmurkoden i Linux. Ta en titt på mansiden til iptables.
        Der finner du mye mer informasjon. Portnumrene som trengs for
        dette finner du i <filename>/etc/services</filename>, i tilfelle du
        ikke fant dem ved prøving og feiling i loggfilen din.
      </para>

    </sect3>

    <sect3  id="iptables-init">
      <title><phrase revision="sysv">Oppstartsskript</phrase>
             <phrase revision="systemd">Systemd Enhet</phrase></title>

      <para revision="sysv">
        For å sette opp iptables brannmuren ved oppstart, installer
        <filename>/etc/rc.d/init.d/iptables</filename> init skriptet inkludert
        i <xref linkend="bootscripts"/> pakken.
      </para>

      <para revision="systemd">
        For å sette opp iptables brannmuren ved oppstart, installer
        <filename>iptables.service</filename> enheten inkludert i
        <xref linkend="systemd-units"/> pakken.
      </para>

      <indexterm zone="iptables iptables-init">
        <primary sortas="f-iptables">iptables</primary>
      </indexterm>

<screen role="root"><userinput>make install-iptables</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Innhold</title>

    <segmentedlist>
      <segtitle>Installerte Programmer</segtitle>
      <segtitle>Installerte Biblioteker</segtitle>
      <segtitle>Installerte Mapper</segtitle>

      <seglistitem>
        <seg>
          ip6tables,
          ip6tables-apply,
          ip6tables-legacy,
          ip6tables-legacy-restore,
          ip6tables-legacy-save,
          ip6tables-restore,
          ip6tables-save,
          iptables,
          iptables-apply,
          iptables-legacy,
          iptables-legacy-restore,
          iptables-legacy-apply,
          iptables-restore,
          iptables-save,
          iptables-xml,
          nfsynproxy (valgfri),
          og xtables-multi
        </seg>
        <seg>
          libip4tc.so,
          libip6tc.so,
          libipq.so,
          libiptc.so,
          og libxtables.so
        </seg>
        <seg>
          /lib/xtables og
          /usr/include/libiptc
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte Beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="iptables-prog">
        <term><command>iptables</command></term>
        <listitem>
          <para>
            brukes til å sette opp, vedlikeholde og inspisere tabellene til
            IP pakkefilterregler i Linux kjernen
          </para>
          <indexterm zone="iptables iptables-prog">
            <primary sortas="b-iptables">iptables</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-apply">
        <term><command>iptables-apply</command></term>
        <listitem>
          <para>
            er en tryggere måte å oppdatere iptables eksternt
          </para>
          <indexterm zone="iptables iptables-apply">
            <primary sortas="b-iptables-apply">iptables-apply</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy">
        <term><command>iptables-legacy</command></term>
        <listitem>
          <para>
            brukes til å samhandle med iptables ved å bruke det gamle kommandosettet
          </para>
          <indexterm zone="iptables iptables-legacy">
            <primary sortas="b-iptables-legacy">iptables-legacy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy-restore">
        <term><command>iptables-legacy-restore</command></term>
        <listitem>
          <para>
            brukes til å gjenopprette et sett med eldre iptables regler
          </para>
          <indexterm zone="iptables iptables-legacy-restore">
            <primary sortas="b-iptables-legacy-restore">iptables-legacy-restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy-save">
        <term><command>iptables-legacy-save</command></term>
        <listitem>
          <para>
            brukes til å lagre et sett med eldre iptables regler
          </para>
          <indexterm zone="iptables iptables-legacy-save">
            <primary sortas="b-iptables-legacy-save">iptables-legacy-save</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-restore">
        <term><command>iptables-restore</command></term>
        <listitem>
          <para>
            brukes til å gjenopprette IP-tabeller fra data spesifisert på
            STDIN. Bruk I/O omdirigering levert av ditt
            skall for å lese fra en filen
          </para>
          <indexterm zone="iptables iptables-restore">
            <primary sortas="b-iptables-restore">iptables-restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-save">
        <term><command>iptables-save</command></term>
        <listitem>
          <para>
            brukes til å enkelt dumpe innholdet i en IP tabell
            parsebart format til STDOUT. Bruk I/O omdirigering
            levert av skallet ditt for å skrive til en fil
          </para>
          <indexterm zone="iptables iptables-save">
            <primary sortas="b-iptables-save">iptables-save</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-xml">
        <term><command>iptables-xml</command></term>
        <listitem>
          <para>
            brukes til å konvertere utdataene til
            <command>iptables-save</command> til et XML format. Å bruke
            <filename>iptables.xslt</filename> stilark konverterer XML
             tilbake til formatet til <command>iptables-restore</command>
          </para>
          <indexterm zone="iptables iptables-xml">
            <primary sortas="b-iptables-xml">iptables-xml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ip6tables">
        <term><command>ip6tables*</command></term>
        <listitem>
          <para>
            er et sett med kommandoer for IPV6 som er parallelle med iptables
            kommandoene ovenfor
          </para>
          <indexterm zone="iptables ip6tables">
            <primary sortas="b-ip6tables">ip6tables</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nfsynproxy">
        <term><command>nfsynproxy</command></term>
        <listitem>
          <para>
            (valgfritt) konfigurasjonsverktøy. SYNPROXY mål gjør håndtering av
            store SYN flommer mulig uten de store ytelsesstraffene
            pålagt av tilkoblingssporingen i slike tilfeller
          </para>
          <indexterm zone="iptables nfsynproxy">
            <primary sortas="b-nfsynproxy">nfsynproxy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xtables-multi">
        <term><command>xtables-multi</command></term>
        <listitem>
          <para>
            er en binær som oppfører seg i henhold til navnet sitt
          </para>
          <indexterm zone="iptables xtables-multi">
            <primary sortas="b-xtables-multi">xtables-multi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
