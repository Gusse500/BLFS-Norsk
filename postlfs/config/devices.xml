<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="postlfs-devices" xreflabel="Om Enheter">
  <?dbhtml filename="devices.html"?>


  <title>Om Enheter</title>

  <indexterm zone="postlfs-devices">
    <primary sortas="e-etc-udev-rules">/etc/udev/rules.d</primary>
  </indexterm>

  <para>
    Selv om de fleste enheter som trengs av pakker i BLFS og utover er satt opp
    skikkelig av <application>udev</application> ved å bruke standardreglene
    installert av LFS i <filename
    class="directory">/etc/udev/rules.d</filename>, det er tilfeller der
    reglene må endres eller utvides.
  </para>

  <para condition="html" role="usernotes">Brukernotater:
  <ulink url="&blfs-wiki;/aboutdevices"/></para>

  <sect2>
    <title>Flere Lydkort</title>

    <para>
      Hvis det er flere lydkort i et system, vil "standard"
      lydkortet blir tilfeldig. Metoden for å etablere lydkortrekkefølge
      avhenger av om driverne er moduler eller ikke. Hvis lydkortets
      drivere er kompilert inn i kjernen, kontroll er via kjernekommandolinjens
      parametere i <filename>/boot/grub/grub.cfg</filename>.  For eksempel,
      hvis et system har både et FM801-kort og et SoundBlaster PCI-kort,
      følgende kan legges til kommandolinjen:
    </para>

<screen><literal>snd-fm801.index=0 snd-ens1371.index=1</literal></screen>

    <para>
      Hvis lydkortdriverne er bygget som moduler, kan rekkefølgen bli
      etablert i <filename>/etc/modprobe.conf</filename> filen med:
    </para>

<screen><literal>options snd-fm801 index=0
options snd-ens1371 index=1</literal></screen>

  </sect2>

  <sect2 id="usb-device-issues">
    <title>Problemer med USB Enheter</title>

    <para>
      USB enheter har vanligvis to typer enhetsnoder knyttet til seg.
    </para>

    <para>
      Den første typen er laget av enhetsspesifikke drivere (f.eks.
      usb_storage/sd_mod eller usblp) i kjernen. For eksempel en USB
      masselagringsenhet ville være /dev/sdb, og en USB skriver ville være
      /dev/usb/lp0. Disse enhetsnodene eksisterer bare når den enhetensspesifikke
      driveren er lastet inn.
    </para>

    <para>
      Den andre typen enhetsnoder (/dev/bus/usb/BBB/DDD, der BBB er
      bussnummeret og DDD er enhetsnummeret) opprettes selv om
      enheten ikke har en kjernedriver. Ved å bruke disse "rå" USB enhetenes
      noder, kan en applikasjon utveksle vilkårlige USB pakker med
      enheten, dvs. omgå den muligens eksisterende kjernedriveren.
    </para>

    <para>
      Tilgang til rå USB enhetsnoder er nødvendig når et brukerromsprogram
      fungerer som enhetsdriver. Men for at programmet skal lykkes med å åpne enheten,
      må tillatelsene settes riktig. Som standard, pga
      av sikkerhetshensyn eies alle rå USB enheter av bruker root og
      gruppe usb, og har 0664-tillatelser (lesetilgangen er nødvendig, f.eks.
      for at lsusb skal fungere og for at programmer skal få tilgang til USB huber). Pakker (f.eks
      som SANE og libgphoto2) som også inneholder USB enhetsdrivere for brukerområdet
      send udev-regler som endrer tillatelsene til den kontrollerte rå USB
      enheten. Det vil si at regler installert av SANE endrer tillatelser for kjente
      skannere, men ikke skrivere. Hvis en pakkevedlikeholder glemte å skrive
      en regel for enheten din, rapporter en feil til både BLFS (hvis pakken er
      der) og oppstrøms, og du må skrive din egen regel.
    </para>

    <para>
      Det er en situasjon når en slik finmasket adgangskontroll med
      forhåndsgenererte udev regler ikke fungerer. Nemlig PC emulatorer som KVM,
      QEMU og VirtualBox bruker rå USB enhetsnoder for å presentere vilkårlig USB
      enheter til gjesteoperativsystemet (merk: oppdateringer er nødvendig
      for å få dette til å fungere uten det utdaterte /proc/bus/usb monteringspunktet
      beskrevet nedenfor). Det er klart at vedlikeholdere av disse pakkene ikke kan vite
      hvilke USB enheter som skal kobles til gjesten som opererer
      systemet. Du kan enten selv skrive separate udev regler for all nødvendig USB
      enheter, eller bruk standard catch-all "usb" gruppen, medlemmer
      som kan sende vilkårlige kommandoer til alle USB enheter.
    </para>

    <para>
      Før Linux-2.6.15 ble tilgang til rå USB enheter ikke utført med
      /dev/bus/usb/BBB/DDD enhetsnoder, men med /proc/bus/usb/BBB/DDD
      pseudofiler. Noen programmer (f.eks. VMware Workstation) bruker fortsatt bare
      denne foreldede teknikken og kan ikke bruke de nye enhetsnodene. For at de skal
      virke, bruk "usb" gruppen, men husk at medlemmene vil ha
      ubegrenset tilgang til alle USB enheter. For å lage fstab oppføringen for
      det utdaterte usbfs filsystemet:
    </para>

<screen><literal>usbfs  /proc/bus/usb  usbfs  devgid=14,devmode=0660  0  0</literal></screen>

    <note>
      <para>
        Å legge til brukere i "usb" gruppen er en iboende usikkert, siden de kan
        omgå tilgangsbegrensninger pålagt via den driverspesifikke USB
        enhetsnoden. For eksempel kan de lese sensitive data fra USB
        harddisker uten å være i "disk" gruppen. Unngå å legge til brukere
        til denne gruppen, hvis du kan.
    </para>
    </note>

  </sect2>

  <sect2>
    <title>Udev Enhetsattributter</title>

    <para>
      Finjustering av enhetsattributter som gruppenavn og tillatelser
      er mulig ved å lage ekstra <application>udev</application> regler,
      samsvarende på noe slikt. Leverandøren og produktet kan finnes med å
      søke på <filename class='directory'>/sys/devices</filename>
      mappegoppføringer eller bruk <command>udevadm info</command> etter at
      enheten er koblet til. Se dokumentasjonen i gjeldende
      <application>udev</application> mappen til <filename
      class='directory'>/usr/share/doc</filename> for detaljer.
    </para>

<screen><literal>SUBSYSTEM=="usb_device", SYSFS{idVendor}=="05d8", SYSFS{idProduct}=="4002", \
  GROUP:="scanner", MODE:="0660"</literal></screen>

    <note>
      <para>
        Linjen ovenfor brukes kun for beskrivende formål.
        <application>udev</application> skanner regler settes på plass når
        <xref linkend='sane'/> installeres.
      </para>
    </note>

  </sect2>

<!--
  <sect2>
    <title>Flere Nettverksgrensesnitt</title>


  </sect2>
-->

<!-- These instructions are invalid on systemd because we don't use bootscripts.
     In addition, we should probably verify that these are valid on SysV too.-->

  <sect2 revision="sysv">
    <title>Enheter for Servere</title>

    <para>
      I noen tilfeller er det fornuftig å deaktivere
      <application>udev</application> fullstendig og lage statiske enheter.
      Servere er ett eksempel om denne situasjonen. Trenger en server
      evne til å håndtere dynamiske enheter? Bare systemadministratoren
      kan svare på det spørsmålet, men i mange tilfeller vil svaret være nei.
    </para>

    <para>
      Hvis dynamiske enheter ikke er ønsket, må statiske enheter være
      opprettet på systemet. I standardkonfigurasjonen
      <filename>/etc/rc.d/rcS.d/S10udev</filename> oppstartsskript monterer en
      <systemitem class="filesystem">tmpfs</systemitem> partisjon over
      <filename class="directory">/dev</filename> mappen. Dette problemet kan
      overvinnes ved å montere root partisjonen midlertidig:
    </para>

    <warning>
      <para>
        Hvis instruksjonene nedenfor ikke følges nøye, kan
        systemet ditt bli uoppstartbart.
      </para>
    </warning>


<screen><userinput>mount --bind / /mnt
cp -a /dev/* /mnt/dev
rm /etc/rc.d/rcS.d/{S10udev,S50udev_retry}
umount /mnt</userinput></screen>

    <para>
      På dette tidspunktet vil systemet bruke statiske enheter på neste
      omstart. Lag eventuelle ekstra enheter ved hjelp av
      <command>mknod</command>.
    </para>

    <para>
      Hvis du vil gjenopprette de dynamiske enhetene, gjenskaper du
      <filename>/etc/rc.d/rcS.d/{S10udev,S50udev_retry}</filename> symbolske
      koblinger og starter på nytt. Statiske enheter trenger ikke å fjernes
      (konsoll og null er alltid nødvendig) fordi de er dekket av
      <systemitem class="filesystem">tmpfs</systemitem> partisjonen. Disk
      bruk for enheter er ubetydelig (ca 20&ndash;30 byte per oppføring.)
    </para>

  </sect2>

  <sect2 id="dev-dvd">
    <title>Devices for DVD Drives</title>

    <para>
      Hvis den første oppstartsprosessen ikke konfigurerer
      <systemitem>/dev/dvd</systemitem> enheten riktig, kan den
      installeres ved å bruke følgende modifikasjon av standard udev regler.
      Som <systemitem class="username">root</systemitem> bruker, kjør:
    </para>

<screen><userinput>sed '1d;/SYMLINK.*cdrom/ a\
KERNEL=="sr0", ENV{ID_CDROM_DVD}=="1", SYMLINK+="dvd", OPTIONS+="link_priority=-100"' \
/lib/udev/rules.d/60-cdrom_id.rules > /etc/udev/rules.d/60-cdrom_id.rules</userinput></screen>

  </sect2>

</sect1>
